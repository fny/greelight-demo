{"version":3,"sources":["pages/DashboardPage.tsx","fixtures.ts","components/Case.tsx","pages/SymptomSurveyPage.tsx","util.ts","components/EmailOrPhoneInput.tsx","pages/SignInPage.tsx","pages/MagicSignInPage.tsx","pages/SplashPage.tsx","pages/ForgotPasswordPage.tsx","pages/PasswordResetPage.tsx","pages/WelcomeParentPage.tsx","pages/WelcomeParent/ReviewChildPage.tsx","routes.ts","pages/RegistrationPage.tsx","pages/WelcomeParent/ReviewUserPage.tsx","pages/WelcomeParent/PasswordPage.tsx","pages/SymptomSurveyCompletePage.tsx","pages/NotFoundPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["jdenticon","hues","lightness","color","grayscale","saturation","backColor","simpsons","marge","id","firstName","lastName","email","mobileNumber","children","parents","locations","homer","lisa","bart","maggie","thegreenes","mother","father","daughter","son","baby","name","website","forEach","child","push","x","users","When","undefined","Case","test","matchAll","matches","React","toArray","filter","props","value","length","console","error","SymptomButton","title","image","selected","onClick","className","alt","src","dangerouslySetInnerHTML","__html","YesNoButton","yesNo","setYesNo","width","tag","outline","fill","SymptomSurveyPage","state","submittingUser","fixtures","targetUser","hasFever","hasChills","hasNewCough","hasDifficultyBreathing","hasLossTasteSmell","hadDiagnosis","hadContact","rawId","this","$f7route","params","Error","parseInt","global","currentUser","childId","hasNextChild","setState","symptom","backLink","toggleSymptom","submittingForSelf","setHadContact","setHadDiagnosis","href","nextChild","Component","EMAIL_REGEX","timeOfDay","hours","Date","getHours","ListEmailOrPhoneInput","seenInput","errorMessage","errorMessageForce","String","toLowerCase","phoneNumber","parsed","parsePhoneNumberFromString","country","isValid","validPhoneNumber","e","validate","target","type","onBlur","bind","onChange","placeholder","SignInPage","emailOrPhone","password","rememberMe","setGlobal","$f7router","navigate","noToolbar","noSwipeback","loginScreen","form","onInput","checkbox","demoSignIn","MagicSignInPage","app","$f7","router","dialog","alert","back","SplashPage","noNavbar","ForgotPasswordPage","PasswordResetPage","WelcomeParentPage","termsOpened","user","map","reduce","y","fillForSelf","fillForChildren","pluralize","totalLocations","whoDoYouFillSurveysFor","large","opened","onSheetClosed","sheetClose","names","i","childCount","childrenNames","noHairlines","footer","slot","location","smartSelect","smartSelectParams","openIn","defaultValue","header","label","path","component","strong","link","after","style","borderRadius","updatedUser","clone","isDifferentEmail","isDifferentMobileNumber","noHairlinesMd","required","info","WelcomeParentReviewChildPage","fontWeight","f7params","theme","routes","view","pushState","history","url","main","Boolean","window","hostname","match","Framework7","use","Framework7React","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.51d1da10.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardHeader, CardContent, Page, List, ListItem, Navbar, Link, Block, BlockTitle } from \"framework7-react\";\nimport * as jdenticon from 'jdenticon'\n\njdenticon.configure({\n  hues: [149],\n  lightness: {\n    color: [0.24, 0.78],\n    grayscale: [0.3, 0.9],\n  },\n  saturation: {\n    color: 0.49,\n    grayscale: 0.77,\n  },\n  backColor: '#edfff5',\n})\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Greenlight\" backLink=\"Back\"></Navbar>\n    <BlockTitle>Your Children</BlockTitle>\n    <List>\n      <ListItem link=\"#\" title=\"Bart Simpson\" after=\"Not Submitted\">\n        <span style={{ borderRadius: '4px'}}\n          slot=\"media\"\n          dangerouslySetInnerHTML={{ __html: jdenticon.toSvg(\"Bart\", 29) }}\n        ></span>\n      </ListItem>\n      <ListItem link=\"#\" title=\"Lisa Simpson\" after=\"Not Submitted\">\n        <span\n          slot=\"media\"\n          dangerouslySetInnerHTML={{ __html: jdenticon.toSvg(\"Lisa\", 29) }}\n        ></span>\n      </ListItem>\n      <ListItem link=\"#\" title=\"Maggie Simpson\" after=\"Not Submitted\">\n        <span\n          slot=\"media\"\n          dangerouslySetInnerHTML={{ __html: jdenticon.toSvg(\"Maggie\", 29) }}\n        ></span>\n      </ListItem>\n    </List>\n    <BlockTitle>Resources</BlockTitle>\n    <List>\n      <ListItem\n        link=\"#\"\n        title=\"Get Connected\"\n        footer=\"Contact a Careworker\"\n      ></ListItem>\n      <ListItem\n        link=\"#\"\n        title=\"Find Testing\"\n        footer=\"Testing Sites Near You\"\n      ></ListItem>\n      <ListItem\n        link=\"#\"\n        title=\"Social Services\"\n        footer=\"Additional Services to Help\"\n      ></ListItem>\n    </List>\n  </Page>\n);\n","import { User } from './models/user'\n\nconst simpsons = {\n  marge: {\n    id: 1,\n    firstName: 'Marge',\n    lastName: 'Simpson',\n    email: 'marge@thesimpsons.com',\n    mobileNumber: '(939) 174-4432',\n    children: [] as any[],\n    parents: [] as any[],\n    locations: [] as any[],\n  },\n  homer: {\n    id: 2,\n    firstName: 'Homer',\n    lastName: 'Simpson',\n    email: 'marge@thesimpsons.com',\n    mobileNumber: '(939) 174-4432',\n    children: [] as any[],\n    parents: [] as any[],\n    locations: [] as any[],\n  },\n  lisa: {\n    id: 3,\n    firstName: 'Lisa',\n    lastName: 'Simpson',\n    children: [] as any[],\n    parents: [] as any[],\n    locations: [] as any[],\n  },\n  bart: {\n    id: 4,\n    firstName: 'Bart',\n    lastName: 'Simpson',\n    email: 'barthax@thesimpsons.com',\n    mobileNumber: '(939) 666-1423',\n    children: [] as any[],\n    parents: [] as any[],\n    locations: [] as any[],\n  },\n  maggie: {\n    id: 5,\n    firstName: 'Maggie',\n    lastName: 'Simpson',\n    children: [] as any[],\n    parents: [] as any[],\n    locations: [] as any[],\n  },\n}\n\nconst thegreenes = {\n  mother: {\n    id: 6,\n    firstName: 'Chloe',\n    lastName: 'Greene',\n    email: 'chloe@gogreene.com',\n    mobileNumber: '(919) 174-4432',\n    children: [] as any[],\n    parents: [] as any[],\n    locations: [] as any[],\n  },\n  father: {\n    id: 7,\n    firstName: 'Meyer',\n    lastName: 'Greene',\n    email: 'hunter@gogreene.com',\n    mobileNumber: '(919) 174-4432',\n    children: [] as any[],\n    parents: [] as any[],\n    locations: [] as any[],\n  },\n  daughter: {\n    id: 8,\n    firstName: 'Lucy',\n    lastName: 'Greene',\n    children: [] as any[],\n    parents: [] as any[],\n    locations: [] as any[],\n  },\n  son: {\n    id: 9,\n    firstName: 'Beacon',\n    lastName: 'Greene',\n    mobileNumber: '(919) 666-1423',\n    children: [] as any[],\n    parents: [] as any[],\n    locations: [] as any[],\n  },\n  baby: {\n    id: 10,\n    firstName: 'Dawn',\n    lastName: 'Greene',\n    children: [] as any[],\n    parents: [] as any[],\n    locations: [] as any[],\n  },\n}\n\nconst locations = {\n  springfieldElementary: {\n    name: \"Springfield Elementary\",\n    email: \"help@sprinfieldelementary.org\",\n    website: \"https://springfieldelementary.org\",\n  },\n  nuclearPlant: {\n    name: \"Springfield Nuclear Power Plant\",\n    email: \"smithers@springfieldnuke.com\",\n    website: \"https://sprinfieldnuke.com\",\n  },\n  longestDaycare: {\n    name: \"Longest Daycare\",\n    email: \"help@longestday.care\",\n    website: \"https://longestday.care\",\n  },\n  bandPractice: {\n    name: \"Springfield Marching Band\",\n    email: \"help@springfieldband.org\",\n    website: \"https://springfieldband.org\"\n  },\n  greenwoodMiddle: {\n    name: \"Greenwood Middle School\",\n    email: \"help@greenwoodmiddle.org\",\n    website: \"https://greenwoodmiddle.org\",\n  },\n  forestHillsElementary: {\n    name: \"Forest Hills Elementary School\",\n    email: \"help@foresthills.org\",\n    website: \"https://foresthills.org\",\n  },\n  shiningDaycare: {\n    name: \"Shining Daycare\",\n    email: \"help@shinigday.care\",\n    website: \"https://shiningday.care\",\n  },\n  soccerLeague: {\n    name: \"Greenwood Soccer League\",\n    email: \"help@greenwoodsoccer.org\",\n    website: \"https://greenwoodsoccer.org\"\n  }\n}\n\n//\n// Simpsons Relationships\n//\n\n// Add bart, lisa, and maggie as children\n;[simpsons.bart, simpsons.lisa, simpsons.maggie].forEach((child: any) => {\n  simpsons.homer.children.push(child)\n  simpsons.marge.children.push(child)\n\n  if (child === simpsons.maggie) {\n    child.locations.push(locations.longestDaycare)\n  } else {\n    child.locations.push(locations.springfieldElementary)\n  }\n\n  if (child === simpsons.lisa) {\n    child.locations.push(locations.bandPractice)\n  }\n})\n\n// Add homer and marge as parents\n;[simpsons.homer, simpsons.marge].forEach((x: any) => {\n  simpsons.bart.parents.push(x)\n  simpsons.lisa.parents.push(x)\n  simpsons.maggie.parents.push(x)\n})\n\n// Add homer to his work\nsimpsons.homer.locations.push(locations.nuclearPlant)\n\n//\n// The Greenes\n//\n\n;[thegreenes.daughter, thegreenes.son, thegreenes.baby].forEach((child: any) => {\n  thegreenes.father.children.push(child)\n  thegreenes.mother.children.push(child)\n})\n\nthegreenes.daughter.locations.push(locations.greenwoodMiddle)\nthegreenes.daughter.locations.push(locations.soccerLeague)\nthegreenes.son.locations.push(locations.forestHillsElementary)\nthegreenes.baby.locations.push(locations.shiningDaycare)\n\nconst users: {[k: string]: User } = {}\nconst usersData = {\n  ...simpsons,\n  ...thegreenes\n}\n// Object.keys(usersData).forEach((key) => {\n//   users[key] = new User((usersData as any)[key])\n// })\n\nexport default {\n  users: usersData\n}\n","import * as React from \"react\";\nimport { StatelessComponent } from \"react\";\nimport { chdir } from \"process\";\n\ninterface WhenProps {\n    value: any;\n    children: any;\n}\nexport const When: StatelessComponent<WhenProps> = ({ children }) =>\n  children === undefined ? null : children;\n\n  interface Props {\n    test: any;\n    children: any;\n    matchAll?: boolean\n}\n\nexport const Case: StatelessComponent<Props> = ( { test, children, matchAll }) => {\n    const matches = React.Children\n                         .toArray(children)\n                         .filter((child:any) => child.props.value == test);\n    if (matches.length === 0) {\n        return null;\n    }\n\n    if (!matchAll) {\n      if (matches.length > 1) {\n        console.error(`<Case /> statement matched multiple children: ${test}`);\n      }\n      return matches[0] as any;\n    }\n\n  return <div>{matches}</div>\n}\n","import React, { useState, getGlobal } from 'reactn'\nimport { Row, Col, Page, Navbar, Link, Block, BlockTitle, Segmented, Button } from 'framework7-react'\nimport fixtures from '../fixtures'\nimport { Case, When } from '../components/Case'\nimport './SymptomSurveyPage.css'\nimport { User } from '../models/user'\n\ninterface SymptomButtonProps {\n  title: string\n  image: string\n  selected?: boolean\n  onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n}\n\nfunction SymptomButton({ title, image, selected, onClick }: SymptomButtonProps) {\n  return (\n    <div\n      className={`SymptomButton ${selected ? 'selected' : ''}`}\n      onClick={onClick}\n    >\n      <img alt={title} src={`/images/symptoms/${image}.svg`} />\n      <img alt={title} src={`/images/symptoms/${image}-bright.svg`} />\n      <br />\n      <span dangerouslySetInnerHTML={{ __html: title }}></span>\n    </div>\n  )\n}\n\ninterface YesNoButtonProps {\n  setYesNo: (yesNo: boolean) => void\n  yesNo: boolean | null\n}\n\nfunction YesNoButton({ yesNo, setYesNo }: YesNoButtonProps) {\n  return (\n    <Row>\n      <Col width=\"50\">\n        <Segmented tag=\"p\">\n          <Button outline fill={yesNo === true} onClick={() => setYesNo(true)}>\n            Yes\n          </Button>\n          <Button\n            outline\n            fill={yesNo === false}\n            onClick={() => setYesNo(false)}\n          >\n            No\n          </Button>\n        </Segmented>\n      </Col>\n    </Row>\n  )\n}\n\ninterface SurveyProps {\n\n}\n\ninterface SurveyState {\n  submittingUser: User\n  targetUser: User\n  hasFever: boolean\n  hasChills: boolean\n  hasNewCough: boolean\n  hasDifficultyBreathing: boolean\n  hasLossTasteSmell: boolean\n  hadDiagnosis: boolean | null\n  hadContact: boolean | null\n}\n\ntype Symptoms =\n  | \"hasFever\"\n  | \"hasChills\"\n  | \"hasNewCough\"\n  | \"hasDifficultyBreathing\"\n  | \"hasLossTasteSmell\"\n\nexport default class SymptomSurveyPage extends React.Component<SurveyProps, SurveyState> {\n  state: SurveyState = {\n    submittingUser: fixtures.users.marge,\n    targetUser: fixtures.users.lisa,\n    hasFever: false,\n    hasChills: false,\n    hasNewCough: false,\n    hasDifficultyBreathing: false,\n    hasLossTasteSmell: false,\n    hadDiagnosis: null,\n    hadContact: null,\n  }\n\n  childId() {\n    const rawId = this.$f7route.params['id']\n    if (!rawId) throw new Error('Child id missing')\n    return parseInt(rawId)\n  }\n\n  child(): User {\n    return this.global.currentUser.children[this.childId() - 1]\n  }\n\n  hasNextChild() {\n    return this.childId() < this.global.currentUser.children.length\n  }\n\n  nextChild() {\n    if (!this.hasNextChild()) {\n      return null\n    }\n    return this.global.currentUser.children[this.childId()]\n  }\n\n  childCount() {\n    return this.global.currentUser.children.length\n  }\n\n  submittingForSelf() {\n    return this.state.submittingUser == this.state.targetUser\n  }\n\n  setHadDiagnosis(yesNo: boolean) {\n    this.setState({\n      ...this.state,\n      hadDiagnosis: yesNo,\n    })\n  }\n\n  setHadContact(yesNo: boolean) {\n    this.setState({\n      ...this.state,\n      hadContact: yesNo,\n    })\n  }\n\n  toggleSymptom(symptom: Symptoms) {\n    this.setState({\n      ...this.state,\n      [symptom]: !this.state[symptom],\n    })\n  }\n\n  render() {\n    const child = this.child()\n    return (\n      <Page>\n        <Navbar title=\"Symptom Survey\" backLink=\"Back\"></Navbar>\n        <Block>\n          <div className=\"survey-title\">\n            Does {child.firstName} have any of these symptoms?\n          </div>\n        </Block>\n        <div className=\"SymptomButtons\">\n          <SymptomButton\n            title=\"Fever\"\n            image=\"fever\"\n            onClick={() => this.toggleSymptom('hasFever')}\n            selected={this.state.hasFever}\n          />\n          <SymptomButton\n            title=\"Chills\"\n            image=\"chills\"\n            onClick={() => this.toggleSymptom('hasChills')}\n            selected={this.state.hasChills}\n          />\n          <SymptomButton\n            title=\"New Cough\"\n            image=\"cough\"\n            onClick={() => this.toggleSymptom('hasNewCough')}\n            selected={this.state.hasNewCough}\n          />\n          <SymptomButton\n            title=\"Difficulty<br />Breathing\"\n            image=\"difficulty-breathing\"\n            onClick={() => this.toggleSymptom('hasDifficultyBreathing')}\n            selected={this.state.hasDifficultyBreathing}\n          />\n          <SymptomButton\n            title=\"Loss of<br />Taste/Smell\"\n            image=\"taste-smell\"\n            onClick={() => this.toggleSymptom('hasLossTasteSmell')}\n            selected={this.state.hasLossTasteSmell}\n          />\n        </div>\n        <Block>\n          <div className=\"survey-title\">COVID Contact?</div>\n          <Case test={this.submittingForSelf()}>\n            <When value={true}>\n              Have you had close contact (within 6 feet for at least 15 minutes)\n              with someone diagnosed with COVID-19? Has a health worker advised\n              you to quarantine?\n            </When>\n            <When value={false}>\n              Has {child.firstName} had close contact—within 6 feet for at least\n              15 minutes—with someone diagnosed with COVID-19? Has a health\n              worker advised {child.firstName} to quarantine?\n            </When>\n          </Case>\n          <br />\n          <YesNoButton\n            setYesNo={(yesNo: boolean) => this.setHadContact(yesNo)}\n            yesNo={this.state.hadContact}\n          />\n          <div className=\"survey-title\">COVID Diagnosis?</div>\n\n          <Case test={this.submittingForSelf()}>\n            <When value={true}>\n              Have you been diagnosed with or tested positive for COVID-19?\n            </When>\n            <When value={false}>\n              Has {child.firstName} been diagnosed with or tested positive for\n              COVID-19?\n            </When>\n          </Case>\n          <YesNoButton\n            setYesNo={(yesNo: boolean) => this.setHadDiagnosis(yesNo)}\n            yesNo={this.state.hadDiagnosis}\n          />\n          <br />\n          <Case test={this.hasNextChild()}>\n            <When value={true}>\n              <Button\n                href={`/welcome-parent/surveys/children/${this.childId() + 1}`}\n                fill\n              >\n                Continue to {this.nextChild()?.firstName}\n              </Button>\n            </When>\n            <When value={false}>\n              <Button fill href={`/welcome-parent/thank-you`}>\n                Finish\n              </Button>\n            </When>\n          </Case>\n        </Block>\n      </Page>\n    )\n  }\n}\n","import { parsePhoneNumberFromString } from 'libphonenumber-js'\n\nconst EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport function validEmail(email: string) {\n  return EMAIL_REGEX.test(String(email).toLowerCase())\n}\n\nexport function validPhoneNumber(phoneNumber: string) {\n  const parsed = parsePhoneNumberFromString(phoneNumber, 'US')\n  if (!parsed) {\n    return false\n  }\n  return parsed.country === 'US' && parsed.isValid()\n}\n\nexport function timeOfDay(): 'morning' | 'afternoon' | 'evening' {\n  const hours = (new Date()).getHours()\n  if (hours < 12) {\n    return 'morning'\n  } else if (hours < 5) {\n    return 'afternoon'\n  } else {\n    return 'evening'\n  }\n}\n","import React from 'react'\nimport { ListInput, Input, List } from 'framework7-react'\nimport { validEmail, validPhoneNumber } from '../util'\nimport { timeStamp } from 'console'\n\ninterface Props {\n  value: string\n}\n\ninterface State {\n  seenInput: boolean\n  errorMessage: string\n  errorMessageForce: boolean\n  value: string\n}\n\nexport default class ListEmailOrPhoneInput extends React.Component<Props, State> {\n  state: State = {\n    seenInput: false,\n    errorMessage: '',\n    errorMessageForce: false,\n    value: ''\n  }\n\n  validate(value: string) {\n    if (value === '') {\n      this.setState({\n        errorMessage: 'Please enter your email or mobile number.',\n      })\n      this.setState({ errorMessageForce: true })\n      return\n    }\n\n    if (!validEmail(value) && !validPhoneNumber(value)) {\n      this.setState({ errorMessage: 'Invalid email or mobile number.' })\n      this.setState({ errorMessageForce: true })\n      return\n    }\n\n    this.setState({ errorMessage: '' })\n    this.setState({ errorMessageForce: false })\n  }\n\n  onBlur(e: React.ChangeEvent<HTMLInputElement>) {\n    if (this.state.seenInput === false) this.setState({ seenInput: true })\n    this.validate(e.target.value)\n  }\n\n  onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ value: e.target.value })\n    if (this.state.seenInput) this.validate(e.target.value)\n  }\n\n  render() {\n    return (\n        <ListInput\n          type=\"text\"\n          onBlur={this.onBlur.bind(this)}\n          onChange={this.onChange.bind(this)}\n          errorMessage={this.state.errorMessage}\n          errorMessageForce={this.state.errorMessageForce}\n          placeholder=\"Email or mobile phone number\"\n        />\n    )\n  }\n}\n","import React, { useState, getGlobal } from 'reactn'\nimport {\n  Page,\n  List,\n  LoginScreenTitle,\n  ListInput,\n  Row,\n  Col,\n  Navbar,\n  Link,\n  Block,\n  BlockTitle,\n  Segmented,\n  Button,\n  ListButton,\n  BlockFooter,\n  ListItem\n} from 'framework7-react'\n\nimport EmailOrPhoneInput from '../components/EmailOrPhoneInput'\nimport './SignInPage.css'\nimport fixtures from '../fixtures'\n\ninterface SignInProps {}\ninterface SignInState {\n  emailOrPhone: string\n  password: string\n  rememberMe: boolean\n}\n\nexport default class SignInPage extends React.Component<SignInProps, SignInState> {\n  state: SignInState = {\n    emailOrPhone: '',\n    password: '',\n    rememberMe: true\n  }\n\n  demoSignIn() {\n    this.setGlobal({ currentUser: fixtures.users.marge })\n    this.$f7router.navigate('/welcome-parent')\n  }\n\n  render() {\n    return (\n      <Page className=\"SignInPage\" noToolbar noSwipeback loginScreen>\n        <Navbar title=\"Sign In\" backLink=\"Back\"></Navbar>\n        <div className=\"greenlight-logo\">\n          Greenlight<span>.</span>\n        </div>\n\n        <List form>\n          <li>\n            <EmailOrPhoneInput value={this.state.emailOrPhone} />\n          </li>\n          <ListInput\n            type=\"password\"\n            placeholder=\"Your password\"\n            value={this.state.password}\n            onInput={(e) => {\n              this.setState({ password: e.target.value })\n            }}\n          />\n          <ListItem checkbox value=\"check_2\" title=\"Remember Me\" />\n\n          <Block>\n            <Button outline fill onClick={() => this.demoSignIn() }>\n              Sign In\n            </Button>\n          </Block>\n        </List>\n        <List>\n          <BlockFooter>\n            <Link href=\"/forgot-password\">Forgot password?</Link>\n          </BlockFooter>\n        </List>\n      </Page>\n    )\n  }\n}\n","import React, { useState, getGlobal } from 'reactn'\nimport {\n  Page,\n  List,\n  LoginScreenTitle,\n  ListInput,\n  Row,\n  Col,\n  Navbar,\n  Link,\n  Block,\n  BlockTitle,\n  Segmented,\n  Button,\n  ListButton,\n  BlockFooter,\n  ListItem,\n} from 'framework7-react'\n\nimport EmailOrPhoneInput from '../components/EmailOrPhoneInput'\nimport './MagicSignInPage.css'\n\ninterface MagicSignInProps {}\ninterface MagicSignInState {\n}\n\nexport default class MagicSignInPage extends React.Component<\n  MagicSignInProps,\n  MagicSignInState\n> {\n  state: MagicSignInState = {\n  }\n\n  render() {\n    return (\n      <Page className=\"MagicSignInPage\" noToolbar noSwipeback loginScreen>\n        <Navbar title=\"Magic Sign In\" backLink=\"Back\"></Navbar>\n        <div className=\"greenlight-logo\">\n          Greenlight<span>.</span>\n        </div>\n        <List form>\n          <Block>\n            Enter your email or mobile number, and we'll send you a magic sign in link.\n          </Block>\n          <li>\n            <EmailOrPhoneInput value=\"\" />\n          </li>\n          <Block>\n            <Button outline fill>\n              Request Magic Link\n            </Button>\n          </Block>\n        </List>\n      </Page>\n    )\n  }\n  signIn() {\n    const self = this\n    const app = self.$f7\n    const router = self.$f7router\n    app.dialog.alert(\n      `You should be recieving an email or text soon.`,\n      () => {\n        router.back()\n      }\n    )\n  }\n}\n","import React, { useState, getGlobal } from 'reactn'\nimport {\n  Page,\n  List,\n  LoginScreenTitle,\n  ListInput,\n  Row,\n  Col,\n  Navbar,\n  Link,\n  Block,\n  BlockTitle,\n  Segmented,\n  Button,\n  ListButton,\n  BlockFooter,\n  ListItem,\n} from 'framework7-react'\n\nimport './SplashPage.css'\n\ninterface SplashProps {}\ninterface SplashState {\n}\n\nexport default class SplashPage extends React.Component<\n  SplashProps,\n  SplashState\n> {\n  state: SplashState = {\n  }\n\n  render() {\n    return (\n      <Page className=\"SplashPage\" noToolbar noNavbar noSwipeback loginScreen>\n        <Block>\n          <div className=\"welcome\">Welcome to</div>\n          <div className=\"logo\">\n            Greenlight<span>.</span>\n          </div>\n          <br />\n          <br />\n          <br />\n          <Button outline href=\"/sign-in\">Sign In with Password</Button>\n          <Button outline href=\"/magic-sign-in\">Magic Sign In</Button>\n          <Button outline href=\"/join\">Join Greenlight</Button>\n        </Block>\n      </Page>\n    )\n  }\n}\n","import React, { useState, getGlobal } from 'reactn'\nimport {\n  Page,\n  List,\n  LoginScreenTitle,\n  ListInput,\n  Row,\n  Col,\n  Navbar,\n  Link,\n  Block,\n  BlockTitle,\n  Segmented,\n  Button,\n  ListButton,\n  BlockFooter,\n  ListItem,\n} from 'framework7-react'\n\nimport EmailOrPhoneInput from '../components/EmailOrPhoneInput'\n\ninterface ForgotPasswordProps {}\ninterface ForgotPasswordState {}\n\nexport default class ForgotPasswordPage extends React.Component<\n  ForgotPasswordProps,\n  ForgotPasswordState\n> {\n  state: ForgotPasswordState = {}\n\n  render() {\n    return (\n      <Page className=\"ForgotPasswordPage\" noToolbar noSwipeback loginScreen>\n        <Navbar title=\"Forgot Password\" backLink=\"Back\"></Navbar>\n        <List form>\n          <Block>\n            Enter your email or mobile number, and we'll send you a link to reset\n            your password.\n          </Block>\n          <li>\n            <EmailOrPhoneInput value=\"\" />\n          </li>\n          <Block>\n            <Button outline fill>\n              Request Reset\n            </Button>\n          </Block>\n        </List>\n      </Page>\n    )\n  }\n  signIn() {\n    const self = this\n    const app = self.$f7\n    const router = self.$f7router\n    app.dialog.alert(`You should be recieving an email or text soon.`, () => {\n      router.back()\n    })\n  }\n}\n","import React, { useState, getGlobal } from 'reactn'\nimport {\n  Page,\n  List,\n  LoginScreenTitle,\n  ListInput,\n  Row,\n  Col,\n  Navbar,\n  Link,\n  Block,\n  BlockTitle,\n  Segmented,\n  Button,\n  ListButton,\n  BlockFooter,\n  ListItem,\n} from 'framework7-react'\n\nimport EmailOrPhoneInput from '../components/EmailOrPhoneInput'\n\ninterface PasswordResetProps {}\ninterface PasswordResetState {}\n\n// TODO: Password reset token must be valid.\nexport default class PasswordResetPage extends React.Component<\n  PasswordResetProps,\n  PasswordResetState\n> {\n  state: PasswordResetState = {}\n\n  render() {\n    return (\n      <Page className=\"PasswordResetPage\" noToolbar noSwipeback loginScreen>\n        <Navbar title=\"Password Reset\" backLink=\"Back\"></Navbar>\n        <List form>\n          <Block>Enter a new password.</Block>\n          {/* TODO: Allow reveal of passwords */}\n          <ListInput type=\"password\" placeholder=\"Password\" />\n          <ListInput type=\"password\" placeholder=\"Password confirmation\" />\n          <Block>\n            <Button outline fill>\n              Request Reset\n            </Button>\n          </Block>\n        </List>\n      </Page>\n    )\n  }\n  signIn() {\n    const self = this\n    const app = self.$f7\n    const router = self.$f7router\n    app.dialog.alert(`You should be recieving an email or text soon.`, () => {\n      router.back()\n    })\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React, { useGlobal, useState } from \"reactn\";\n\nimport {\n  Page,\n  Navbar,\n  Block,\n  BlockTitle,\n  Button,\n  List,\n  ListInput,\n  ListItem,\n  AccordionContent,\n  Toolbar,\n  Link,\n  Row,\n  Col,\n  Icon,\n  Sheet,\n  PageContent\n} from \"framework7-react\";\n\nimport { Case, When } from \"../components/Case\"\n\nimport pluralize from \"pluralize\"\nimport { timeOfDay } from \"../util\";\nimport { User } from '../models/user'\n\n\ninterface Props {}\n\n\n\ninterface State {\n  termsOpened: boolean\n}\n\nexport default class WelcomeParentPage extends React.Component<Props, State> {\n  state: State = {\n    termsOpened: false\n  }\n\n  totalLocations() {\n    const user: User = this.global.currentUser\n    return user.locations.length + user.children.map(x => x.locations.length).reduce((x, y) => x + y)\n  }\n\n  whoDoYouFillSurveysFor() {\n    const user = this.global.currentUser\n    const fillForSelf = user.locations.length > 0\n    const fillForChildren = user.children.length > 0\n    if (fillForSelf && fillForChildren) {\n      return `Every day you'll need to fill out symptom surveys for\n      you and your ${pluralize('child', user.children.length)}.`\n    } else if (fillForSelf) {\n      return `Every day you'll need to fill out symptom surveys for yourself.`\n    } else if (fillForChildren) {\n      return `Every day you'll need to fill out symptom surveys for\n      your ${pluralize('child', user.children.length)}.`\n    } else {\n      // TODO: What if they have no locations or children?\n      return `This may have been due to an error. Please contact greenlight at help@greenlighted.org`\n    }\n  }\n\n  render() {\n    return <Page>\n      <Block>\n        <h1>\n          <Case test={timeOfDay()}>\n            <When value=\"morning\">Good Morning!</When>\n            <When value=\"afternoon\">Good Afternoon!</When>\n            <When value=\"evening\">Good Evening!</When>\n          </Case>\n        </h1>\n        <p>\n          You've been added by{' '}\n          {pluralize('locations', this.totalLocations(), true)} to Greenlight's\n          secure HIPAA and FERPA compliant COVID-19 monitoring platform.\n        </p>\n        <p>\n          {this.whoDoYouFillSurveysFor()} We will not share any data without your\n          permission.\n        </p>\n        <img alt=\"Welcome to Greenlight!\" src=\"/images/welcome-doctor.svg\" />\n        <p>\n          By continuing, you accept Greenlight's{' '}\n          <Link\n            onClick={() => {\n              this.setState({ termsOpened: true })\n            }}\n          >\n            Terms and Conditions\n          </Link>\n          .\n        </p>\n      </Block>\n      <Block>\n        <Row tag=\"p\">\n          <Col tag=\"span\">\n            <Button large href=\"/\">Sign Out</Button>\n          </Col>\n          <Col tag=\"span\">\n            <Button\n              large\n              fill\n              href=\"/welcome-parent/review\"\n            >\n              Continue\n            </Button>\n          </Col>\n        </Row>\n      </Block>\n      <Sheet\n        opened={this.state.termsOpened}\n        onSheetClosed={() => {\n          this.setState({ termsOpened: false })\n        }}\n      >\n        <Toolbar>\n          <div className=\"left\"></div>\n          <div className=\"right\">\n            <Link sheetClose>Close</Link>\n          </div>\n        </Toolbar>\n        {/*  Scrollable sheet content */}\n        <PageContent>\n          <Block>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quae\n              ducimus dolorum ipsa aliquid accusamus perferendis laboriosam...\n            </p>\n          </Block>\n        </PageContent>\n      </Sheet>\n    </Page>\n  }\n}\n\n","import { Case, When } from '../../components/Case'\nimport React from 'reactn'\nimport { Page, Navbar, Block, Link, List, ListItem, ListInput, Row, Col, Button } from 'framework7-react'\n\nimport { User } from '../../models/user'\nimport pluralize from 'pluralize'\n\ninterface Props {}\ninterface State {}\n\nexport default class extends React.Component<Props, State> {\n\n  childId() {\n    const rawId = this.$f7route.params['id']\n    if (!rawId) throw new Error(\"Child id missing\");\n    return parseInt(rawId)\n  }\n\n  child(): User {\n    return this.global.currentUser.children[this.childId() - 1]\n  }\n\n  hasNextChild() {\n    return this.childId() < this.global.currentUser.children.length\n  }\n\n  nextChild() {\n    if (!this.hasNextChild()) {\n      return null\n    }\n    return this.global.currentUser.children[this.childId()]\n  }\n\n  childCount() {\n    return this.global.currentUser.children.length\n  }\n\n  childrenNames() {\n    const children = this.global.currentUser.children\n    let names = ''\n    for (let i = 0; i < children.length; i++) {\n      names += children[i].firstName\n      if (i === (children.length - 2)) {\n        names += ', and '\n      }\n      if (i < children.length - 2)  {\n        names += ', '\n      }\n    }\n    return names\n  }\n\n  render() {\n    const user = this.global.currentUser\n    const child = this.child()\n\n    return (\n      <Page>\n        <Navbar title={`Review ${child.firstName}'s Info`} backLink></Navbar>\n\n        <Case test={true}>\n          {/* First Child */}\n          <When value={user.children[0] === child}>\n            <Block>\n              We've found {pluralize('child', this.childCount(), true)}{' '}\n              associated with you: {this.childrenNames()}. Let's take a moment\n              to review their information starting with {child.firstName}.\n              <br />\n              {/* TODO: Link to a page where users can remove students. */}\n              <Link>Is something wrong?</Link>\n            </Block>\n          </When>\n          {/* Last Child */}\n          <When value={user.children[user.children.length - 1] === child}>\n            <Block>\n              Take a moment to review {child.firstName}'s information.\n            </Block>\n          </When>\n          <When value={true}>\n            <Block>\n              Finally, take a moment to review {child.firstName}'s information.\n            </Block>\n          </When>\n        </Case>\n\n        <List noHairlines>\n          <ListItem footer=\"Update the schools Lisa will be attending.\">\n            <div slot=\"title\">\n              <b>{child.firstName}'s Schools and Places</b>\n            </div>\n          </ListItem>\n          {child.locations.map((location) => (\n            <ListItem\n              title={location.name}\n              smartSelect\n              smartSelectParams={{ openIn: 'sheet' }}\n            >\n              <select name=\"mac-windows\" defaultValue=\"attending\">\n                <option value=\"in-person\">In Person</option>\n                <option value=\"virtual\">Virtual</option>\n                <option value=\"mixed\">Mixed</option>\n                <option value=\"not-attending\">Not Attending</option>\n              </select>\n            </ListItem>\n          ))}\n        </List>\n        <List noHairlines>\n          <ListItem footer=\"Who is Lisa's primary care doctor?\">\n            <div slot=\"title\">\n              <b>{child.firstName}'s Primary Care (Optional)</b>\n            </div>\n          </ListItem>\n          <ListItem\n            checkbox\n            header=\"Don't have a primary care doctor?\"\n            title=\"Get help finding one\"\n            name=\"demo-checkbox\"\n          />\n          <ListInput\n            label=\"Primary Care Doctor\"\n            placeholder={`${child.firstName}'s doctor's name`}\n            type=\"text\"\n          />\n          <ListInput\n            label=\"Primary Care Doctor Phone\"\n            placeholder={`${child.firstName}'s doctor's phone`}\n            type=\"tel\"\n          />\n        </List>\n        <Block>\n          <Case test={this.hasNextChild()}>\n            <When value={true}>\n              <Button\n                href={`/welcome-parent/children/${this.childId() + 1}`}\n                fill\n              >\n                Continue to {this.nextChild()?.firstName}\n              </Button>\n            </When>\n            <When value={false}>\n              <Button fill href={`/welcome-parent/surveys/children/1`}>\n                Continue\n              </Button>\n            </When>\n          </Case>\n        </Block>\n      </Page>\n    )\n  }\n}\n","\nimport HomePage from './pages/HomePage'\nimport NotFoundPage from './pages/NotFoundPage'\nimport DashboardPage from './pages/DashboardPage'\nimport SymptomSurveyPage from './pages/SymptomSurveyPage'\nimport ThankYouPage from './pages/SymptomSurveyCompletePage'\nimport SignInPage from './pages/SignInPage'\nimport MagicSignInPage from './pages/MagicSignInPage'\nimport SplashPage from './pages/SplashPage'\nimport RegistrationPage from './pages/RegistrationPage'\nimport ForgotPasswordPage from './pages/ForgotPasswordPage'\nimport PasswordResetPage from './pages/PasswordResetPage'\n\nimport WelcomeParentPage from './pages/WelcomeParentPage'\nimport WelcomeParentReviewChildPage from './pages/WelcomeParent/ReviewChildPage'\nimport WelcomeParentReviewUserPage from './pages/WelcomeParent/ReviewUserPage'\nimport WelcomeParentPasswordPage from './pages/WelcomeParent/PasswordPage'\n\nexport default [\n  {\n    path: '/',\n    component: SplashPage,\n  },\n  {\n    path: '/sign-in',\n    component: SignInPage,\n  },\n  {\n    path: '/magic-sign-in',\n    component: MagicSignInPage,\n  },\n  {\n    path: '/join',\n    component: RegistrationPage,\n  },\n  {\n    path: '/dashboard',\n    component: DashboardPage,\n  },\n  {\n    path: '/password-resets/:token',\n    component: PasswordResetPage,\n  },\n  {\n    path: '/forgot-password',\n    component: ForgotPasswordPage,\n  },\n  {\n    path: '/welcome-parent',\n    component: WelcomeParentPage,\n  },\n  {\n    path: '/welcome-parent/review',\n    component: WelcomeParentReviewUserPage,\n  },\n  {\n    path: '/welcome-parent/password',\n    component: WelcomeParentPasswordPage,\n  },\n  {\n    path: '/welcome-parent/children/:id',\n    component: WelcomeParentReviewChildPage,\n  },\n  {\n    path: '/welcome-parent/surveys/children/:id',\n    component: SymptomSurveyPage,\n  },\n  {\n    path: '/welcome-parent/thank-you',\n    component: ThankYouPage,\n  },\n  {\n    path: '(.*)',\n    component: NotFoundPage,\n  },\n]\n","import React from 'react'\nimport { Page, Navbar, Link, Block, BlockTitle } from 'framework7-react'\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Join Greenlight\" backLink=\"Back\"></Navbar>\n    <Block strong noHairlines>\n      <p>\n        Greenlight is currently invitation only. Please contact your school to\n        find out when your account will be opened.\n      </p>\n    </Block>\n  </Page>\n)\n","import React from 'reactn'\n\nimport { clone } from 'lodash'\nimport { Page, Navbar, Block, Button, List, ListInput } from 'framework7-react'\n\nimport { User } from '../../models/user'\n\ninterface Props {}\n\ninterface State {\n  updatedUser: User\n}\n\nexport default class ReviewUserPage extends React.Component<Props, State> {\n  state: State = {\n    updatedUser: clone(this.global.currentUser)\n  }\n\n  render() {\n    const updatedUser = this.state.updatedUser\n    const isDifferentEmail = updatedUser.email !== this.global.currentUser.email\n    const isDifferentMobileNumber =\n      updatedUser.mobileNumber !== this.global.currentUser.mobileNumber\n    return (\n      <Page>\n        <Navbar backLink={true} title=\"Review Your Info\" />\n        <Block>\n          <p>\n            Here is the information we have on file for you. Feel free to make\n            any changes.\n          </p>\n        </Block>\n\n        <List noHairlinesMd>\n          <ListInput\n            label=\"First Name\"\n            type=\"text\"\n            placeholder=\"Your first name\"\n            value={updatedUser.firstName}\n            onChange={(e) =>\n              this.setState({\n                updatedUser: {\n                  ...updatedUser,\n                  firstName: (e.target.value as string) || '',\n                },\n              })\n            }\n            required\n          />\n          <ListInput\n            label=\"Last Name\"\n            type=\"text\"\n            placeholder=\"Your last name\"\n            value={updatedUser.lastName}\n            onChange={(e) =>\n              this.setState({\n                updatedUser: {\n                  ...updatedUser,\n                  lastName: (e.target.value as string) || '',\n                },\n              })\n            }\n            required\n          />\n          <ListInput\n            label=\"Email\"\n            type=\"email\"\n            placeholder=\"Your email\"\n            value={updatedUser.email || ''}\n            info={\n              isDifferentEmail\n                ? \"We'll need to verify this new email.\"\n                : undefined\n            }\n            onChange={(e) =>\n              this.setState({\n                updatedUser: {\n                  ...updatedUser,\n                  email: (e.target.value as string) || '',\n                },\n              })\n            }\n            required\n            validate\n          />\n          <ListInput\n            label=\"Mobile number\"\n            type=\"tel\"\n            placeholder=\"Your mobile number\"\n            value={updatedUser.mobileNumber || ''}\n            info={\n              isDifferentMobileNumber\n                ? \"We'll need to verify this new phone number.\"\n                : undefined\n            }\n            onChange={(e) =>\n              this.setState({\n                updatedUser: {\n                  ...updatedUser,\n                  mobileNumber: e.target.value as string,\n                },\n              })\n            }\n            required\n            validate\n          />\n          {/* TODO: Ask user if they'd prefer email or text message alerts */}\n          <Block>\n            <p>Next you'll set your password.</p>\n            <Button href=\"/welcome-parent/password\" fill>\n              Continue\n            </Button>\n          </Block>\n        </List>\n      </Page>\n    )\n  }\n}\n","import React from 'reactn'\nimport { Page, Navbar, Block, List, ListInput, Button } from 'framework7-react'\nimport { When, Case } from '../../components/Case'\n\n\n\ninterface Props {}\ninterface State {}\n\nexport default class extends React.Component<Props, State> {\n  render() {\n    return (\n      <Page>\n        <Navbar title=\"Set Your Password\"></Navbar>\n        <Block>\n          <p>\n            You'll sign in with your email address or mobile number and this\n            password.\n          </p>\n        </Block>\n        <Block>\n          <List noHairlines>\n            <ListInput\n              label=\"Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n              validate\n            />\n            <ListInput\n              label=\"Confirm Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n              validate\n            />\n          </List>\n          <img\n            alt=\"Greenlight gives security highest importance.\"\n            src=\"/images/welcome-secure.svg\"\n          />\n\n          <Case test={this.global.currentUser.children.length > 0}>\n            <When value={true}>\n              <p>Next you'll review your children.</p>\n              <Button large fill href=\"/welcome-parent/children/1\">\n                Continue\n              </Button>\n            </When>\n            <When value={false}>\n              {/* TODO: Go to Survey */}\n            </When>\n          </Case>\n        </Block>\n      </Page>\n    )\n  }\n}\n","import React from 'react';\nimport { Page, Navbar, Block, BlockTitle, Button } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"All Clear!\" backLink=\"Back\"></Navbar>\n\n    <Block>\n      <p style={{fontWeight: \"bold\"}}>Your children are cleared for school.</p>\n      <p>Enjoy your day! Here's something we hope will make you smile. 😃</p>\n      <img\n        style={{ width: \"100%\" }}\n        src=\"https://media.giphy.com/media/322FvxfciE8UsYvILG/giphy.gif\"\n        alt=\"Image of the Day\"\n      />\n      <Button large fill>\n        Back Home\n      </Button>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Not found\" backLink=\"Back\" />\n    <Block strong>\n      <p>Sorry</p>\n      <p>Requested content not found.</p>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport 'typeface-poppins'\nimport 'typeface-open-sans'\n\nimport './App.css';\n\nimport {\n  App,\n  Panel,\n  View,\n  Popup,\n  Page,\n  Navbar,\n  NavRight,\n  Link,\n  Block,\n  LoginScreen,\n  LoginScreenTitle,\n  List,\n  ListInput,\n  ListButton,\n  BlockFooter,\n  Toolbar\n} from 'framework7-react';\n\nimport routes from './routes';\n\nexport default function () {\n\n  // Framework7 parameters here\n  const f7params = {\n    id: 'com.greenlightready.mobile', // App bundle ID\n    name: 'Greenlight', // App name\n    theme: 'auto', // Automatic theme detection\n    // App routes\n    routes,\n    view: {\n      pushState: true,\n      history: true\n    },\n  }\n\n  return (\n    <App params={f7params} className=\"App\">\n      {/* Statusbar */}\n      {/* <Statusbar /> */}\n\n\n      {/* Main View */}\n      <View id=\"main-view\" url=\"/\" main className=\"safe-areas\" />\n    </App>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { setGlobal, addCallback } from 'reactn'\n\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle'\n\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react'\n\n// Framework7 styles\nimport 'framework7/css/framework7.bundle.css'\nimport './index.css'\nimport fixtures from './fixtures'\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React)\n\n// addCallback((global) => {\n//   window.localStorage.setItem('globalState', JSON.stringify(global));\n// })\n\nsetGlobal({\n  currentUser: fixtures.users.mother\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}