{"version":3,"sources":["common/models/model.ts","common/models/greenlightStatus.ts","common/models/medicalEvent.ts","common/models/user.ts","common/models/location.ts","common/models/index.ts","components/JDenticon.tsx","components/Case.tsx","components/YesNoButton.tsx","pages/SymptomSurveyPage.tsx","util.ts","components/EmailOrPhoneInput.tsx","fixtures.ts","pages/SignInPage.tsx","pages/MagicSignInPage.tsx","pages/SplashPage.tsx","pages/ForgotPasswordPage.tsx","pages/PasswordResetPage.tsx","pages/WelcomeParentPage.tsx","pages/WelcomeParent/ReviewChildPage.tsx","routes.ts","pages/RegistrationPage.tsx","pages/DashboardPage.tsx","pages/WelcomeParent/ReviewUserPage.tsx","pages/WelcomeParent/PasswordPage.tsx","pages/SymptomSurveyCompletePage.tsx","pages/NotFoundPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["debug","obj","JSON","stringify","k","v","Array","isArray","ATTR_METADATA_KEY","Symbol","REL_METADATA_KEY","STRING","orbitType","DATETIME","serialize","x","format","deserialize","moment","ModelRegistry","models","this","forEach","m","push","singularOrPlural","model","singular","plural","schemaData","attributes","relationships","attrDefinitions","getAttributes","Object","keys","propertyKey","definition","type","relDefinitions","getRelationships","relationshipName","rel","inverse","Schema","buildOrbitSchema","Model","data","id","_data","uuid","getPrototypeOf","constructor","entries","attributeMetadata","property","value","initialize","record","this_","attrMeta","relMeta","relationshipMetadata","includes","attrDef","Error","relDef","modelFor","map","attribute","definiton","attrDefinition","target","allMetadata","Reflect","getMetadata","currAttributes","key","defineMetadata","relationship","prototype","GREENLIGHT_STATUSES","MEDICAL_EVENTS","GreenlightStatus","attr","STATUSES","UNKNOWN","User","children","length","hasChildren","greenlightStatuses","status","Location","MedicalEvent","TYPES","SYMPTOMS","FEVER","NEW_COUGH","TASTE_SMELL","DIFFICULTY_BREATING","CHILLS","NONE","register","configs","red","hues","lightness","color","grayscale","saturation","backColor","yellow","green","unknown","absent","JDenticon","user","size","jdenticon","greenlightStatus","style","borderRadius","background","btoa","backgroundPosition","height","width","textAlign","lineHeight","fontWeight","firstName","When","undefined","Case","test","matchAll","matches","React","toArray","filter","child","props","console","error","YesNoButton","yesNo","setYesNo","tag","outline","fill","onClick","SymptomButton","title","image","selected","className","alt","src","dangerouslySetInnerHTML","__html","SymptomSurveyPage","state","hasFever","hasChills","hasNewCough","hasDifficultyBreathing","hasLossTasteSmell","hadDiagnosis","hadContact","rawId","$f7route","params","global","currentUser","parseInt","isSubmittingForSelf","childId","hasNextChild","setState","symptom","submittingFor","backLink","toggleSymptom","setHadContact","setHadDiagnosis","href","nextChild","Component","EMAIL_REGEX","timeOfDay","hours","Date","getHours","ListEmailOrPhoneInput","seenInput","errorMessage","errorMessageForce","email","String","toLowerCase","phoneNumber","parsed","parsePhoneNumberFromString","country","isValid","validPhoneNumber","e","validate","onBlur","bind","onChange","placeholder","onInput","locations","springfieldElementary","name","website","nuclearPlant","longestDaycare","bandPractice","greenwoodMiddle","forestHillsElementary","shiningDaycare","soccerLeague","beyuCaffe","simpsons","marge","lastName","mobileNumber","parents","homer","lisa","bart","maggie","thegreenes","mother","father","daughter","son","baby","beyu","users","SignInPage","emailOrPhone","password","rememberMe","setGlobal","fixtures","$f7router","navigate","noToolbar","noSwipeback","loginScreen","form","checkbox","demoSignIn","MagicSignInPage","app","$f7","router","dialog","alert","back","SplashPage","noNavbar","ForgotPasswordPage","PasswordResetPage","WelcomeParentPage","termsOpened","reduce","y","fillForSelf","fillForChildren","pluralize","totalLocations","whoDoYouFillSurveysFor","large","opened","onSheetClosed","sheetClose","names","i","childCount","childrenNames","noHairlines","footer","slot","location","smartSelect","smartSelectParams","openIn","defaultValue","header","label","path","component","strong","useGlobal","f7","display","accordionItem","link","after","updatedUser","clone","isDifferentEmail","isDifferentMobileNumber","noHairlinesMd","required","info","WelcomeParentReviewChildPage","f7params","theme","routes","view","pushState","history","url","main","Boolean","window","hostname","match","addReactNDevTools","Framework7","use","Framework7React","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5c374ab3.chunk.js","sourcesContent":["import * as uuid from 'uuid'\nimport 'reflect-metadata'\nimport moment from 'moment'\nimport { Schema, SchemaSettings } from '@orbit/data'\n\ninterface DataType {\n  serialize?: Function,\n  deserialize?: Function,\n  orbitType: string\n}\n\ninterface AttributeDefinition {\n  source?: string | string[]\n  transform?: (x: any) => any\n  // e.g. User, [User]\n  type: DataType\n}\n\ninterface RelationshipDefinition {\n  type: 'hasOne' | 'hasMany'\n  model: string\n  // Name of inverse model to keep in sync\n  inverse?: string\n}\n\nfunction debug(obj: any) {\n  return JSON.stringify(obj, function (k, v) {\n    return k && v && typeof v !== 'number'\n      ? Array.isArray(v)\n        ? '[object Array]'\n        : '' + v\n      : v\n  })\n}\n\nexport const ATTR_METADATA_KEY = Symbol('gl:attr')\nexport const REL_METADATA_KEY = Symbol('gl:rel')\n\nexport const STRING: DataType = {\n  orbitType: 'string'\n}\n\nexport const NUMBER: DataType = {\n  orbitType: 'number'\n}\n\nexport const BOOLEAN: DataType = {\n  orbitType: 'boolean'\n}\n\n// TODO: Date type\n\nexport const DATETIME: DataType = {\n  serialize: (x: moment.Moment) => x.format(),\n  deserialize: moment,\n  orbitType: 'date-time'\n}\n\nclass Registry {\n  models: typeof Model[]\n  constructor() {\n    this.models = []\n  }\n\n  register(...models: (typeof Model)[]) {\n    models.forEach(m => this.models.push(m))\n  }\n\n  modelFor(singularOrPlural: string) {\n    for (let model of this.models) {\n      if (model.singular === singularOrPlural || model.plural === singularOrPlural) {\n        return model\n      }\n    }\n    return null\n  }\n  orbitSchema() {\n    return buildOrbitSchema(this.models)\n  }\n}\n\nexport const ModelRegistry = new Registry()\n\nexport class Model {\n  static singular: string\n  static plural: string\n  id: string\n\n  _data: any\n\n  constructor(data?: any) {\n    this.id = uuid.v1()\n    // This is here to make the compiler happy\n  }\n\n  modelName() {\n    return Object.getPrototypeOf(this).constructor.singular\n  }\n\n  modelNamePlural() {\n    return Object.getPrototypeOf(this).constructor.plural\n  }\n\n  attributeMetadata() {\n    return getAttributes(Object.getPrototypeOf(this).constructor)\n  }\n\n  relationshipMetadata() {\n    return getRelationships(Object.getPrototypeOf(this).constructor)\n  }\n\n  serialize() {\n    const attributes: any = {}\n\n    for (const [property, value] of Object.entries(this.attributeMetadata())) {\n      attributes[property] = value.type.serialize ?\n        value.type.serialize((this as any)[property]) :\n        (this as any)[property]\n    }\n\n    return {\n      id: this.id,\n      type: Object.getPrototypeOf(this).constructor.singular,\n      attributes\n    }\n  }\n}\n\nexport function initialize(record: Model,  data: any)  {\n  deserialize(Object.getPrototypeOf(record).constructor, data, record)\n}\n\nfunction deserialize(model: typeof Model, data: any, this_?: Model) {\n  const record = this_ || new model()\n  if (!data) return record\n  record._data = data\n\n\n  const attrMeta = record.attributeMetadata()\n  const relMeta = record.relationshipMetadata()\n\n  for (const [property, value] of Object.entries(data)) {\n    if (property === 'id') {\n      record.id = value as string\n      continue\n    }\n\n    if (['_data'].includes(property)) {\n      continue\n    }\n\n    // Cast and assign attributes\n    if (attrMeta && property in attrMeta) {\n      const attrDef = ((attrMeta as any)[property] as AttributeDefinition)\n        ; (record as any)[property] =\n          attrDef.type.deserialize ? attrDef.type.deserialize(value) : value\n      continue\n    }\n\n    // Cast and assign relationships\n    if (relMeta && property in relMeta) {\n      const relDef = ((relMeta as any)[property] as RelationshipDefinition)\n      if (relDef.type === 'hasMany') {\n        const model = ModelRegistry.modelFor(relDef.model)\n        if (model === null) {\n          throw new Error(`Couldn't find model for ${relDef.model}`)\n        }\n        if (!Array.isArray(value)) {\n          throw new Error(`Expected Array for hasMany got ${debug(value)}`)\n        }\n        ; (record as any)[property] = value.map(v => new model(v))\n      } else {\n        const model = ModelRegistry.modelFor(relDef.model)\n        if (!model) {\n          throw new Error(`Couldn't find model for ${relDef.model}`)\n        }\n        if (Array.isArray(value)) {\n          throw new Error(`Expected single object for hasOne got ${debug(value)}`)\n        }\n        ; (record as any)[property] = new (model as any)(value)\n      }\n      continue\n    }\n\n    throw new Error(`No matching attribute or relationship: ${property}`)\n  }\n  return record\n}\n\nexport function attribute(definiton: AttributeDefinition) {\n  const attrDefinition = definiton || {}\n  return (target: Object, propertyKey: string) => {\n    // `target` is the object/class where the property key resides\n\n    // Pull the existing metadata or create an empty object\n    const allMetadata: { [propertyKey: string]: AttributeDefinition } =\n      Reflect.getMetadata(ATTR_METADATA_KEY, target) || {}\n\n    // Ensure allMetadata has propertyKey\n    allMetadata[propertyKey] = allMetadata[propertyKey] || {}\n    const currAttributes = allMetadata[propertyKey]\n\n    Object.keys(attrDefinition).forEach(key => {\n      (currAttributes as any)[key] = (attrDefinition as any)[key]\n    })\n    // Update the metadata\n    Reflect.defineMetadata(ATTR_METADATA_KEY, allMetadata, target)\n  }\n}\n\nexport function relationship(definiton: RelationshipDefinition) {\n  const attrDefinition = definiton || {}\n  return (target: Object, propertyKey: string) => {\n    // `target` is the object/class where the property key resides\n\n    // Pull the existing metadata or create an empty object\n    const allMetadata: { [propertyKey: string]: RelationshipDefinition } =\n      Reflect.getMetadata(REL_METADATA_KEY, target) || {}\n\n    // Ensure allMetadata has propertyKey\n    allMetadata[propertyKey] = allMetadata[propertyKey] || {}\n    const currAttributes = allMetadata[propertyKey]\n\n    Object.keys(attrDefinition).forEach(key => {\n      (currAttributes as any)[key] = (attrDefinition as any)[key]\n    })\n    // Update the metadata\n    Reflect.defineMetadata(REL_METADATA_KEY, allMetadata, target);\n  }\n}\n\nfunction getAttributes(model: typeof Model): { [k: string]: AttributeDefinition } {\n  return Reflect.getMetadata(ATTR_METADATA_KEY, model.prototype)\n}\n\nfunction getRelationships(model: typeof Model): { [k: string]: AttributeDefinition } {\n  return Reflect.getMetadata(REL_METADATA_KEY, model.prototype)\n}\n\nfunction buildOrbitSchema(models: (typeof Model)[]) {\n  const schemaData: SchemaSettings = { models: {} }\n\n  models.forEach(model => {\n    const attributes = {}\n    const relationships = {}\n\n    const attrDefinitions = getAttributes(model)\n    if (attrDefinitions) {\n      Object.keys(attrDefinitions).forEach(propertyKey => {\n        const definition = ((attrDefinitions as any)[propertyKey] as AttributeDefinition)\n          ; (attributes as any)[propertyKey] = { type: definition.type.orbitType }\n      })\n    }\n\n    const relDefinitions = getRelationships(model)\n\n    if (relDefinitions) {\n\n      Object.keys(relDefinitions).forEach(relationshipName => {\n        const rel = ((relDefinitions as any)[relationshipName] as RelationshipDefinition)\n          ; (relationships as any)[relationshipName] = {\n            type: rel.type,\n            model: rel.model\n          }\n        if (rel.inverse) {\n          (relationships as any)[relationshipName]['inverse'] = rel.inverse\n        }\n\n      })\n    }\n    if (!schemaData.models) return //  To make TS shut up\n    schemaData.models[model.singular] = {\n      attributes,\n      relationships\n    }\n  })\n  return new Schema(schemaData)\n}\n","import { Model, attribute as attr, relationship,initialize, STRING, DATETIME } from './model'\nimport { User } from './user'\nimport moment from 'moment'\n\nexport enum GREENLIGHT_STATUSES {\n  RED = 'red',\n  YELLOW = 'yellow',\n  GREEN = 'green',\n  ABSENT = 'absent',\n  UNKNOWN = 'unknown'\n}\n\nexport class GreenlightStatus extends Model {\n  static STATUSES = GREENLIGHT_STATUSES\n  static singular = 'greenlight-status'\n  static plural = 'greenlight-statuses'\n\n  constructor(data?: any) {\n    super()\n    initialize(this, data)\n  }\n\n  @attr({ type: STRING })\n  status: GREENLIGHT_STATUSES = GREENLIGHT_STATUSES.UNKNOWN\n\n  @attr({ type: DATETIME })\n  statusSetAt: moment.Moment | null = null\n\n  @attr({ type: DATETIME })\n  statusExpiresAt: moment.Moment | null = null\n\n  @attr({ type: STRING })\n  reason: string = ''\n\n  @relationship({ type: 'hasOne', model: 'user' })\n  user?: User\n}\n","import { Model, attribute as attr, initialize, DATETIME, STRING } from './model'\nimport moment, { Moment } from 'moment'\n\nenum MEDICAL_EVENTS {\n  NONE = 'none',\n  FEVER = 'fever',\n  NEW_COUGH = 'new_cough',\n  DIFFICULTY_BREATING = 'difficulty_breathing',\n  TASTE_SMELL = 'taste_smell',\n  CHILLS = 'chills',\n  COVID_EXPOSURE = 'covid_exposure',\n  COVID_TEST = 'covid_test',\n  COVID_TEST_POSITIVE = 'covid_test_positive',\n  COVID_TEST_NEGATIVE = 'covid_test_negative',\n  COVID_DIAGNOSIS = 'covid_diagnosis',\n  COVID_RULED_OUT = 'covid_ruled_out',\n  SYMPTOM_IMPROVEMENT = 'symptom_improvement'\n}\n\nexport class MedicalEvent extends Model {\n  static singular = 'medical-event'\n  static plural = 'medical-events'\n  static TYPES = MEDICAL_EVENTS\n  static SYMPTOMS = [\n    MEDICAL_EVENTS.FEVER,\n    MEDICAL_EVENTS.NEW_COUGH,\n    MEDICAL_EVENTS.TASTE_SMELL,\n    MEDICAL_EVENTS.DIFFICULTY_BREATING,\n    MEDICAL_EVENTS.CHILLS\n  ]\n\n  constructor(data?: any) {\n    super()\n    initialize(this, data)\n  }\n\n  @attr({ type: STRING })\n  eventType: MEDICAL_EVENTS = MEDICAL_EVENTS.NONE\n\n  @attr({ type: DATETIME })\n  occuredAt: Moment = moment(null)\n\n  @attr({ type: DATETIME })\n  createdAt: Moment = moment(null)\n}\n\nexport function hasEvent(medicalEvents: MedicalEvent[], eventType: MEDICAL_EVENTS | MEDICAL_EVENTS[], lookbackDays: number) {\n  return findEvents(medicalEvents, eventType, lookbackDays).length > 0\n}\n\nexport function findEvents(medicalEvents: MedicalEvent[], eventType: MEDICAL_EVENTS | MEDICAL_EVENTS[], lookbackDays: number) {\n  const start = moment().subtract(lookbackDays, 'day')\n  const eventTypes = Array.isArray(eventType) ? eventType : [eventType]\n  return medicalEvents\n    .filter(event => event.occuredAt >= start)\n    .filter(event => eventTypes.includes(event.eventType))\n}\n\nexport function findLastEvent(medicalEvents: MedicalEvent[], eventType: MEDICAL_EVENTS | MEDICAL_EVENTS[], lookbackDays: number) {\n  const events = findEvents(medicalEvents, eventType, lookbackDays)\n  return events.length > 0 ? events[-1] : null\n}\n","import { Model, attribute as attr, relationship, initialize, STRING, DATETIME } from './model'\nimport moment, { Moment } from 'moment'\nimport { Location } from './location'\nimport { GreenlightStatus } from './greenlightStatus'\nimport { MedicalEvent, findLastEvent, hasEvent } from './medicalEvent'\n\nexport class User extends Model {\n  static singular = 'user'\n  static plural = 'users'\n\n  constructor(data?: any) {\n    super()\n    initialize(this, data)\n  }\n\n  @attr({ type: STRING })\n  firstName: string = ''\n\n  @attr({ type: STRING })\n  lastName: string = ''\n\n  @attr({ type: STRING })\n  email: string | null = null\n\n  @attr({ type: DATETIME })\n  emailConfirmedAt: string | null = null\n\n  @attr({ type: STRING })\n  mobileNumber: string | null = null\n\n  @attr({ type: STRING })\n  mobileCarrier: string | null = null\n\n  @attr({ type: STRING })\n  mobileNumberUnconfirmed: string | null = null\n\n  @attr({ type: STRING })\n  zipCode: string | null = null\n\n  @attr({ type: STRING })\n  physicianName: string | null = null\n\n  @attr({ type: STRING })\n  physicianPhone: string | null = null\n\n  @attr({ type: DATETIME })\n  reviewedAt: moment.Moment | null = null\n\n  @relationship({ type: 'hasOne', model: 'user' })\n  reviewedBy?: User\n\n  @relationship({ type: 'hasMany', model: 'location' })\n  locations: Location[] = []\n\n  @relationship({ type: 'hasMany', model: 'user' })\n  children: User[] = []\n\n  @relationship({ type: 'hasMany', model: 'user' })\n  parents: User[] = []\n\n  @relationship({ type: 'hasMany', model: 'medical-event' })\n  medicalEvents: MedicalEvent[] = []\n\n  @relationship({ type: 'hasMany', model: 'greenlight-status' })\n  greenlightStatuses: GreenlightStatus[] = []\n\n\n  hasChildren() {\n    return this.children.length > 0\n  }\n\n  isParent() {\n    return this.hasChildren()\n  }\n\n  greenlightStatus() {\n    if (this.greenlightStatuses.length === 0) {\n      return new GreenlightStatus({ status: GreenlightStatus.STATUSES.UNKNOWN })\n    }\n    return this.greenlightStatuses[-1]\n  }\n}\n\n//  - If nothing in survey is checked, proceed to school\n//  - If exposure only, stay home for 14 days\n//  - If diagnosed asymptomatic home for 10 days\n//  - If one symptom,\n//   - If positive or not tested:\n//     - 10 days since first symptoms\n//     - No fever for 24 hours (without fever reducing techniques)\n//     - Symptom improviment\n//   - Negative test\n//     - No fever for 24 hours\n//   - Confirmed alternative diagnosis\n\n// class NCGreenlightStrategy {\n//   user: User\n//   constructor(user: User) {\n//     this.user = user\n//   }\n\n//   status() {\n//     const lastExposure = findLastEvent(this.user.medicalEvents, MedicalEvent.TYPES.COVID_EXPOSURE, 14)\n\n//     const lastCOVIDPositive = findLastEvent(this.user.medicalEvents, [\n//       MedicalEvent.TYPES.COVID_DIAGNOSIS, MedicalEvent.TYPES.COVID_TEST_POSITIVE\n//     ], 10)\n\n//     const lastCOVIDNegative = findLastEvent(this.user.medicalEvents, [\n//       MedicalEvent.TYPES.COVID_RULED_OUT, MedicalEvent.TYPES.COVID_TEST_NEGATIVE\n//     ], 10)\n//     const hasAnySymptoms = hasEvent(this.user.medicalEvents, MedicalEvent.SYMPTOMS, 1)\n//     const hasRecentFever = hasEvent(this.user.medicalEvents, MedicalEvent.TYPES.FEVER, 1)\n//     const hasSymptomImprovement = hasEvent(this.user.medicalEvents, MedicalEvent.TYPES.SYMPTOM_IMPROVEMENT, 1)\n\n//     if (!hasAnySymptoms && lastExposure === null && lastCOVIDPositive === null) {\n//       const now = moment()\n//       return new GreenlightStatus({\n//         statusSetAt: now\n//         statusExpiresAt: now.add(1, 'day')\n//       })\n//     }\n\n//     hasEvent(this.user.medicalEvents, MedicalEvent.TYPES.COVID_TEST_POSITIVE, 14)\n//   }\n\n\n// }\n","import { Model, attribute as attr, initialize, STRING } from './model'\n\nexport class Location extends Model {\n  static singular = 'location'\n  static plural = 'locations'\n\n  constructor(data?: any) {\n    super()\n    initialize(this, data)\n  }\n\n  @attr({ type: STRING }) name: string = ''\n  @attr({ type: STRING }) phoneNumber: string | null = null\n  @attr({ type: STRING }) website: string | null = null\n  @attr({ type: STRING }) email: string = ''\n  @attr({ type: STRING }) zipCode: string | null = null\n}\n","import { ModelRegistry } from './model'\nimport { User } from './user'\nimport { GreenlightStatus } from './greenlightStatus'\nimport { Location } from './location'\nimport { MedicalEvent } from './medicalEvent'\n\n\nModelRegistry.register(User, GreenlightStatus, Location, MedicalEvent)\n\nexport { ModelRegistry, User, GreenlightStatus, Location, MedicalEvent }\n","import React from 'react'\nimport * as jdenticon from 'jdenticon'\nimport { User } from '../common/models/user'\nimport { GREENLIGHT_STATUSES } from  '../common/models/greenlightStatus'\nconst configs: { [k in GREENLIGHT_STATUSES]: jdenticon.JdenticonConfig } = {\n  red: {\n    hues: [328],\n    lightness: {\n      color: [0.0, 1],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.5,\n      grayscale: 1,\n    },\n    backColor: '#feecfe',\n  },\n  yellow: {\n    hues: [50],\n    lightness: {\n      color: [0.0, 1],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.5,\n      grayscale: 1,\n    },\n    backColor: '#f9f1bb',\n  },\n  green: {\n    hues: [146],\n    lightness: {\n      color: [0.0, 1],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.5,\n      grayscale: 1,\n    },\n    backColor: '#abe8d6',\n  },\n  unknown: {\n    hues: [146],\n    lightness: {\n      color: [0.6, 0.9],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.0,\n      grayscale: 0.0,\n    },\n    backColor: '#eeeeee',\n  },\n  absent: {\n    hues: [216],\n    lightness: {\n      color: [0.0, 1],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.5,\n      grayscale: 1,\n    },\n    backColor: '#ecf2fe',\n  },\n}\n\ntype Props = {\n  user: User\n  size: number\n}\n\nconst JDenticon = ({ user, size }: Props) => {\n  jdenticon.configure(configs[user.greenlightStatus().status])\n  return (\n    <div\n      // dangerouslySetInnerHTML={{ __html: jdenticon.toSvg(user.id, size) }}\n      style={{\n        // border: '1px solid #00000022',\n        borderRadius: `${size}px`,\n        background: `url(data:image/svg+xml;base64,${btoa(\n          jdenticon.toSvg(user.id, size)\n        )})`,\n        backgroundPosition: 'center',\n        height: `${size}px`,\n        width: `${size}px`,\n        textAlign: 'center',\n        lineHeight: `${size}px`,\n        fontWeight: 'bold',\n        color: 'var(--gl-color-dark)'\n      }}\n    >\n      {user.firstName[0]}\n    </div>\n  )\n}\n\nexport default JDenticon\n","import * as React from \"react\";\nimport { StatelessComponent } from \"react\";\nimport { chdir } from \"process\";\n\ninterface WhenProps {\n    value: any;\n    children: any;\n}\nexport const When: StatelessComponent<WhenProps> = ({ children }) =>\n  children === undefined ? null : children;\n\n  interface Props {\n    test: any;\n    children: any;\n    matchAll?: boolean\n}\n\nexport const Case: StatelessComponent<Props> = ( { test, children, matchAll }) => {\n    const matches = React.Children\n                         .toArray(children)\n                         .filter((child:any) => child.props.value == test);\n    if (matches.length === 0) {\n        return null;\n    }\n\n    if (!matchAll) {\n      if (matches.length > 1) {\n        console.error(`<Case /> statement matched multiple children: ${test}`);\n      }\n      return matches[0] as any;\n    }\n\n  return <div>{matches}</div>\n}\n","import React from 'react'\n\nimport {\n  Row,\n  Col,\n  Segmented,\n  Button,\n} from 'framework7-react'\n\ninterface YesNoButtonProps {\n  setYesNo: (yesNo: boolean) => void\n  yesNo: boolean | null\n}\n\nexport default function YesNoButton({ yesNo, setYesNo }: YesNoButtonProps) {\n  return (\n    <Row>\n      <Col width=\"50\">\n        <Segmented tag=\"p\">\n          <Button outline fill={yesNo === true} onClick={() => setYesNo(true)}>\n            Yes\n          </Button>\n          <Button\n            outline\n            fill={yesNo === false}\n            onClick={() => setYesNo(false)}\n          >\n            No\n          </Button>\n        </Segmented>\n      </Col>\n    </Row>\n  )\n}\n","import React, { useState, getGlobal } from 'reactn'\nimport { Row, Col, Page, Navbar, Link, Block, BlockTitle, Segmented, Button } from 'framework7-react'\nimport fixtures from '../fixtures'\nimport { Case, When } from '../components/Case'\nimport './SymptomSurveyPage.css'\nimport { User } from '../common/models/user'\nimport YesNoButton from '../components/YesNoButton'\n\n\n\n\n\n\ninterface SymptomButtonProps {\n  title: string\n  image: string\n  selected?: boolean\n  onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n}\n\nfunction SymptomButton({ title, image, selected, onClick }: SymptomButtonProps) {\n  return (\n    <div\n      className={`SymptomButton ${selected ? 'selected' : ''}`}\n      onClick={onClick}\n    >\n      <img alt={title} src={`/images/symptoms/${image}.svg`} />\n      <img alt={title} src={`/images/symptoms/${image}-bright.svg`} />\n      <br />\n      <span dangerouslySetInnerHTML={{ __html: title }}></span>\n    </div>\n  )\n}\n\n\ninterface SurveyProps {\n\n}\n\ninterface SurveyState {\n  hasFever: boolean\n  hasChills: boolean\n  hasNewCough: boolean\n  hasDifficultyBreathing: boolean\n  hasLossTasteSmell: boolean\n  hadDiagnosis: boolean | null\n  hadContact: boolean | null\n}\n\ntype Symptoms =\n  | \"hasFever\"\n  | \"hasChills\"\n  | \"hasNewCough\"\n  | \"hasDifficultyBreathing\"\n  | \"hasLossTasteSmell\"\n\nexport default class SymptomSurveyPage extends React.Component<SurveyProps, SurveyState> {\n  state: SurveyState = {\n    hasFever: false,\n    hasChills: false,\n    hasNewCough: false,\n    hasDifficultyBreathing: false,\n    hasLossTasteSmell: false,\n    hadDiagnosis: null,\n    hadContact: null,\n  }\n\n  submittingFor() {\n    const rawId = this.$f7route.params['id']\n    if (!rawId) throw new Error('User id missing')\n    if (rawId === \"me\") {\n      return this.global.currentUser\n    } else {\n      return this.global.currentUser.children[parseInt(rawId) - 1]\n    }\n\n    // return Object.values(fixtures.users).filter(x => x.id === rawId)[0]\n\n  }\n\n  submittingBy() {\n    return this.global.currentUser\n  }\n\n  isSubmittingForSelf() {\n    return this.$f7route.params['id'] === 'me'\n    // return this.submittingBy() === this.submittingFor()\n  }\n\n  isSubmittingForChild() {\n    if (this.isSubmittingForSelf()) return false\n    return true\n    // const maybeChild = this.submittingFor()\n    // return this.global.currentUser.children.filter(c => c.id === maybeChild.id).length > 0\n  }\n\n  childId(): number {\n    return parseInt(this.$f7route.params['id'] || '1')\n  }\n\n  hasNextChild() {\n    return this.childId() < this.global.currentUser.children.length\n  }\n\n  nextChild() {\n    if (!this.hasNextChild()) {\n      return null\n    }\n    return this.global.currentUser.children[this.childId()]\n  }\n\n  childCount() {\n    return this.global.currentUser.children.length\n  }\n\n  setHadDiagnosis(yesNo: boolean) {\n    this.setState({\n      ...this.state,\n      hadDiagnosis: yesNo,\n    })\n  }\n\n  setHadContact(yesNo: boolean) {\n    this.setState({\n      ...this.state,\n      hadContact: yesNo,\n    })\n  }\n\n  toggleSymptom(symptom: Symptoms) {\n    this.setState({\n      ...this.state,\n      [symptom]: !this.state[symptom],\n    })\n  }\n\n  render() {\n    const submittingFor = this.submittingFor()\n    const isSubmittingForSelf = this.isSubmittingForSelf()\n    return (\n      <Page>\n        <Navbar title=\"Symptom Survey\" backLink=\"Back\"></Navbar>\n        <Block>\n          <div className=\"survey-title\">\n            {\n              isSubmittingForSelf ?\n              `Do you have any of these symptoms?`\n              :\n              `Does ${submittingFor.firstName} have any of these symptoms?`\n            }\n          </div>\n        </Block>\n        <div className=\"SymptomButtons\">\n          <SymptomButton\n            title=\"Fever\"\n            image=\"fever\"\n            onClick={() => this.toggleSymptom('hasFever')}\n            selected={this.state.hasFever}\n          />\n          <SymptomButton\n            title=\"Chills\"\n            image=\"chills\"\n            onClick={() => this.toggleSymptom('hasChills')}\n            selected={this.state.hasChills}\n          />\n          <SymptomButton\n            title=\"New Cough\"\n            image=\"cough\"\n            onClick={() => this.toggleSymptom('hasNewCough')}\n            selected={this.state.hasNewCough}\n          />\n          <SymptomButton\n            title=\"Difficulty<br />Breathing\"\n            image=\"difficulty-breathing\"\n            onClick={() => this.toggleSymptom('hasDifficultyBreathing')}\n            selected={this.state.hasDifficultyBreathing}\n          />\n          <SymptomButton\n            title=\"Loss of<br />Taste/Smell\"\n            image=\"taste-smell\"\n            onClick={() => this.toggleSymptom('hasLossTasteSmell')}\n            selected={this.state.hasLossTasteSmell}\n          />\n        </div>\n        <Block>\n          <div className=\"survey-title\">COVID Contact?</div>\n            {\n              isSubmittingForSelf ?\n              `Have you had close contact—within 6 feet for at least 15\n              minutes—with someone diagnosed with COVID-19? Has a health worker\n              advised you to quarantine?`\n              :\n              `Has ${submittingFor.firstName} had close contact—within 6 feet for at least 15\n              minutes—with someone diagnosed with COVID-19? Has a health worker\n              advised ${submittingFor.firstName} to quarantine?`\n            }\n          <br />\n          <YesNoButton\n            setYesNo={(yesNo: boolean) => this.setHadContact(yesNo)}\n            yesNo={this.state.hadContact}\n          />\n          <div className=\"survey-title\">COVID Diagnosis?</div>\n            {\n              isSubmittingForSelf ?\n              `Have you been diagnosed with or tested positive for COVID-19?`\n              :\n              `Has ${submittingFor.firstName} been diagnosed with or tested positive for\n              COVID-19?`\n            }\n          <YesNoButton\n            setYesNo={(yesNo: boolean) => this.setHadDiagnosis(yesNo)}\n            yesNo={this.state.hadDiagnosis}\n          />\n          <br />\n          <Case test={this.hasNextChild()}>\n            <When value={true}>\n              <Button\n                href={`/welcome-parent/surveys/children/${this.childId() + 1}`}\n                fill\n              >\n                Continue to {this.nextChild()?.firstName}\n              </Button>\n            </When>\n            <When value={false}>\n              <Button fill href={`/welcome-parent/thank-you`}>\n                Finish\n              </Button>\n            </When>\n          </Case>\n        </Block>\n      </Page>\n    )\n  }\n}\n","import { parsePhoneNumberFromString } from 'libphonenumber-js'\n\nconst EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport function validEmail(email: string) {\n  return EMAIL_REGEX.test(String(email).toLowerCase())\n}\n\nexport function validPhoneNumber(phoneNumber: string) {\n  const parsed = parsePhoneNumberFromString(phoneNumber, 'US')\n  if (!parsed) {\n    return false\n  }\n  return parsed.country === 'US' && parsed.isValid()\n}\n\nexport function timeOfDay(): 'morning' | 'afternoon' | 'evening' {\n  const hours = (new Date()).getHours()\n  if (hours < 12) {\n    return 'morning'\n  } else if (hours < 5) {\n    return 'afternoon'\n  } else {\n    return 'evening'\n  }\n}\n","import React from 'react'\nimport { ListInput, Input, List } from 'framework7-react'\nimport { validEmail, validPhoneNumber } from '../util'\nimport { timeStamp } from 'console'\n\ninterface Props {\n  value: string\n  onInput?: (...args: any[]) => void\n}\n\ninterface State {\n  seenInput: boolean\n  errorMessage: string\n  errorMessageForce: boolean\n  value: string\n}\n\nexport default class ListEmailOrPhoneInput extends React.Component<Props, State> {\n  state: State = {\n    seenInput: false,\n    errorMessage: '',\n    errorMessageForce: false,\n    value: ''\n  }\n\n  validate(value: string) {\n    if (value === '') {\n      this.setState({\n        errorMessage: 'Please enter your email or mobile number.',\n      })\n      this.setState({ errorMessageForce: true })\n      return\n    }\n\n    if (!validEmail(value) && !validPhoneNumber(value)) {\n      this.setState({ errorMessage: 'Invalid email or mobile number.' })\n      this.setState({ errorMessageForce: true })\n      return\n    }\n\n    this.setState({ errorMessage: '' })\n    this.setState({ errorMessageForce: false })\n  }\n\n  onBlur(e: React.ChangeEvent<HTMLInputElement>) {\n    if (this.state.seenInput === false) this.setState({ seenInput: true })\n    this.validate(e.target.value)\n  }\n\n  onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ value: e.target.value })\n    if (this.state.seenInput) this.validate(e.target.value)\n  }\n\n  render() {\n    return (\n        <ListInput\n          type=\"text\"\n          onBlur={this.onBlur.bind(this)}\n          onChange={this.onChange.bind(this)}\n          errorMessage={this.state.errorMessage}\n          errorMessageForce={this.state.errorMessageForce}\n          placeholder=\"Email or mobile phone number\"\n          onInput={this.props.onInput}\n        />\n    )\n  }\n}\n","import { User, Location } from './common/models'\n\nconst locations = {\n  springfieldElementary: new Location({\n    name: \"Springfield Elementary\",\n    email: \"help@sprinfieldelementary.org\",\n    website: \"https://springfieldelementary.org\",\n  }),\n  nuclearPlant: new Location({\n    name: \"Springfield Nuclear Power Plant\",\n    email: \"smithers@springfieldnuke.com\",\n    website: \"https://sprinfieldnuke.com\",\n  }),\n  longestDaycare: new Location({\n    name: \"Longest Daycare\",\n    email: \"help@longestday.care\",\n    website: \"https://longestday.care\",\n  }),\n  bandPractice: new Location({\n    name: \"Springfield Marching Band\",\n    email: \"help@springfieldband.org\",\n    website: \"https://springfieldband.org\"\n  }),\n  greenwoodMiddle: new Location({\n    name: \"Greenwood Middle School\",\n    email: \"help@greenwoodmiddle.org\",\n    website: \"https://greenwoodmiddle.org\",\n  }),\n  forestHillsElementary: new Location({\n    name: \"Forest Hills Elementary School\",\n    email: \"help@foresthills.org\",\n    website: \"https://foresthills.org\",\n  }),\n  shiningDaycare: new Location({\n    name: \"Shining Daycare\",\n    email: \"help@shinigday.care\",\n    website: \"https://shiningday.care\",\n  }),\n  soccerLeague: new Location({\n    name: \"Greenwood Soccer League\",\n    email: \"help@greenwoodsoccer.org\",\n    website: \"https://greenwoodsoccer.org\"\n  }),\n  beyuCaffe: new Location({\n    name: \"Beyu Caffe\",\n    email: \"info@beyucaffe.com\",\n    website: \"https://beyucaffe.com\"\n  })\n}\n\nconst simpsons: { [k: string]: User } = {\n  marge: new User({\n    id: '1',\n    firstName: 'Marge',\n    lastName: 'Simpson',\n    email: 'marge@thesimpsons.com',\n    mobileNumber: '(939) 174-4432',\n    children: [] as User[],\n    parents: [] as User[],\n    locations: [] as User[],\n  }),\n  homer: new User({\n    id: '2',\n    firstName: 'Homer',\n    lastName: 'Simpson',\n    email: 'marge@thesimpsons.com',\n    mobileNumber: '(939) 174-4432',\n    children: [] as User[],\n    parents: [] as User[],\n    locations: [] as User[],\n  }),\n  lisa: new User({\n    id: '3',\n    firstName: 'Lisa',\n    lastName: 'Simpson',\n    children: [] as User[],\n    parents: [] as User[],\n    locations: [locations.springfieldElementary, locations.bandPractice] as Location[],\n  }),\n  bart: new User({\n    id: '4',\n    firstName: 'Bart',\n    lastName: 'Simpson',\n    email: 'barthax@thesimpsons.com',\n    mobileNumber: '(939) 666-1423',\n    children: [] as User[],\n    parents: [] as User[],\n    locations: [locations.springfieldElementary] as Location[],\n  }),\n  maggie: new User({\n    id: '5',\n    firstName: 'Maggie',\n    lastName: 'Simpson',\n    children: [] as User[],\n    parents: [] as User[],\n    locations: [locations.longestDaycare] as Location[],\n  }),\n}\n\nconst thegreenes: { [k: string]: User } = {\n  mother: new User({\n    id: '6',\n    firstName: 'Chloe',\n    lastName: 'Greene',\n    email: 'chloe@gogreene.com',\n    mobileNumber: '(919) 174-4432',\n    children: [] as User[],\n    parents: [] as User[],\n    locations: [] as User[],\n  }),\n  father: new User({\n    id: '7',\n    firstName: 'Meyer',\n    lastName: 'Greene',\n    email: 'hunter@gogreene.com',\n    mobileNumber: '(919) 174-4432',\n    children: [] as User[],\n    parents: [] as User[],\n    locations: [locations.forestHillsElementary] as Location[],\n  }),\n  daughter: new User({\n    id: '8',\n    firstName: 'Lucy',\n    lastName: 'Greene',\n    children: [] as User[],\n    parents: [] as User[],\n    locations: [locations.greenwoodMiddle, locations.soccerLeague] as Location[],\n  }),\n  son: new User({\n    id: '9',\n    firstName: 'Beacon',\n    lastName: 'Greene',\n    mobileNumber: '(919) 666-1423',\n    children: [] as User[],\n    parents: [] as User[],\n    locations: [locations.forestHillsElementary] as Location[],\n  }),\n  baby: new User({\n    id: '10',\n    firstName: 'Dawn',\n    lastName: 'Greene',\n    children: [] as User[],\n    parents: [] as User[],\n    locations: [locations.longestDaycare] as Location[],\n  }),\n}\n\nconst beyu =  new User({\n  id: 'beyu',\n  firstName: 'Dorian',\n  lastName: 'Bolden',\n  email: 'dorian@beyucaffe.com',\n  mobileNumber: '(919) 683-1058',\n  children: [] as User[],\n  parents: [] as User[],\n  locations: [locations.beyuCaffe] as Location[],\n})\n\n//\n// Simpsons Relationships\n//\n\n// Add bart, lisa, and maggie as children\n;[simpsons.bart, simpsons.lisa, simpsons.maggie].forEach((child: User) => {\n  simpsons.homer.children.push(child)\n  simpsons.marge.children.push(child)\n})\n\n//\n// The Greenes\n//\n\n;[thegreenes.daughter, thegreenes.son, thegreenes.baby].forEach((child: any) => {\n  thegreenes.father.children.push(child)\n  thegreenes.mother.children.push(child)\n})\n\nconst users: { [k: string]: User } = {\n  ...simpsons,\n  ...thegreenes,\n  beyu\n}\n\nexport default {\n  users\n}\n","import React, { useState, getGlobal } from 'reactn'\nimport {\n  Page,\n  List,\n  LoginScreenTitle,\n  ListInput,\n  Row,\n  Col,\n  Navbar,\n  Link,\n  Block,\n  BlockTitle,\n  Segmented,\n  Button,\n  ListButton,\n  BlockFooter,\n  ListItem\n} from 'framework7-react'\n\nimport EmailOrPhoneInput from '../components/EmailOrPhoneInput'\nimport './SignInPage.css'\nimport fixtures from '../fixtures'\n\ninterface SignInProps {}\ninterface SignInState {\n  emailOrPhone: string\n  password: string\n  rememberMe: boolean\n}\n\nexport default class SignInPage extends React.Component<SignInProps, SignInState> {\n  state: SignInState = {\n    emailOrPhone: '',\n    password: '',\n    rememberMe: true\n  }\n\n  demoSignIn() {\n\n\n    \n    if (this.state.emailOrPhone?.includes('beyu')) {\n      this.setGlobal({ currentUser: fixtures.users.beyu })\n    } else {\n      this.setGlobal({ currentUser: fixtures.users.mother })\n    }\n\n\n    this.$f7router.navigate('/welcome-parent')\n  }\n\n  render() {\n    return (\n      <Page className=\"SignInPage\" noToolbar noSwipeback loginScreen>\n        <Navbar title=\"Sign In\" backLink=\"Back\"></Navbar>\n        <div className=\"greenlight-logo\">\n          Greenlight<span>.</span>\n        </div>\n\n        <List form>\n          <li>\n            <EmailOrPhoneInput value={this.state.emailOrPhone} onInput={(e) => {\n              this.setState({ emailOrPhone: e.target.value })\n            }} />\n          </li>\n          <ListInput\n            type=\"password\"\n            placeholder=\"Your password\"\n            value={this.state.password}\n            onInput={(e) => {\n              this.setState({ password: e.target.value })\n            }}\n          />\n          <ListItem checkbox value=\"check_2\" title=\"Remember Me\" />\n\n          <Block>\n            <Button outline fill onClick={() => this.demoSignIn() }>\n              Sign In\n            </Button>\n          </Block>\n        </List>\n        <List>\n          <BlockFooter>\n            <Link href=\"/forgot-password\">Forgot password?</Link>\n          </BlockFooter>\n        </List>\n      </Page>\n    )\n  }\n}\n","import React, { useState, getGlobal } from 'reactn'\nimport {\n  Page,\n  List,\n  LoginScreenTitle,\n  ListInput,\n  Row,\n  Col,\n  Navbar,\n  Link,\n  Block,\n  BlockTitle,\n  Segmented,\n  Button,\n  ListButton,\n  BlockFooter,\n  ListItem,\n} from 'framework7-react'\n\nimport EmailOrPhoneInput from '../components/EmailOrPhoneInput'\nimport './MagicSignInPage.css'\n\ninterface MagicSignInProps {}\ninterface MagicSignInState {\n}\n\nexport default class MagicSignInPage extends React.Component<\n  MagicSignInProps,\n  MagicSignInState\n> {\n  state: MagicSignInState = {\n  }\n\n  render() {\n    return (\n      <Page className=\"MagicSignInPage\" noToolbar noSwipeback loginScreen>\n        <Navbar title=\"Magic Sign In\" backLink=\"Back\"></Navbar>\n        <div className=\"greenlight-logo\">\n          Greenlight<span>.</span>\n        </div>\n        <List form>\n          <Block>\n            Enter your email or mobile number, and we'll send you a magic sign in link.\n          </Block>\n          <li>\n            <EmailOrPhoneInput value=\"\" />\n          </li>\n          <Block>\n            <Button outline fill>\n              Request Magic Link\n            </Button>\n          </Block>\n        </List>\n      </Page>\n    )\n  }\n  signIn() {\n    const self = this\n    const app = self.$f7\n    const router = self.$f7router\n    app.dialog.alert(\n      `You should be recieving an email or text soon.`,\n      () => {\n        router.back()\n      }\n    )\n  }\n}\n","import React, { useState, getGlobal } from 'reactn'\nimport {\n  Page,\n  List,\n  LoginScreenTitle,\n  ListInput,\n  Row,\n  Col,\n  Navbar,\n  Link,\n  Block,\n  BlockTitle,\n  Segmented,\n  Button,\n  ListButton,\n  BlockFooter,\n  ListItem,\n} from 'framework7-react'\n\nimport './SplashPage.css'\n\ninterface SplashProps {}\ninterface SplashState {\n}\n\nexport default class SplashPage extends React.Component<\n  SplashProps,\n  SplashState\n> {\n  state: SplashState = {\n  }\n\n  render() {\n    return (\n      <Page className=\"SplashPage\" noToolbar noNavbar noSwipeback loginScreen>\n        <Block>\n          <div className=\"welcome\">Welcome to</div>\n          <div className=\"logo\">\n            Greenlight<span>.</span>\n          </div>\n          <br />\n          <br />\n          <br />\n          <Button outline href=\"/sign-in\">Sign In with Password</Button>\n          <Button outline href=\"/magic-sign-in\">Magic Sign In</Button>\n          <Button outline href=\"/join\">Join Greenlight</Button>\n        </Block>\n      </Page>\n    )\n  }\n}\n","import React, { useState, getGlobal } from 'reactn'\nimport {\n  Page,\n  List,\n  LoginScreenTitle,\n  ListInput,\n  Row,\n  Col,\n  Navbar,\n  Link,\n  Block,\n  BlockTitle,\n  Segmented,\n  Button,\n  ListButton,\n  BlockFooter,\n  ListItem,\n} from 'framework7-react'\n\nimport EmailOrPhoneInput from '../components/EmailOrPhoneInput'\n\ninterface ForgotPasswordProps {}\ninterface ForgotPasswordState {}\n\nexport default class ForgotPasswordPage extends React.Component<\n  ForgotPasswordProps,\n  ForgotPasswordState\n> {\n  state: ForgotPasswordState = {}\n\n  render() {\n    return (\n      <Page className=\"ForgotPasswordPage\" noToolbar noSwipeback loginScreen>\n        <Navbar title=\"Forgot Password\" backLink=\"Back\"></Navbar>\n        <List form>\n          <Block>\n            Enter your email or mobile number, and we'll send you a link to reset\n            your password.\n          </Block>\n          <li>\n            <EmailOrPhoneInput value=\"\" />\n          </li>\n          <Block>\n            <Button outline fill>\n              Request Reset\n            </Button>\n          </Block>\n        </List>\n      </Page>\n    )\n  }\n  signIn() {\n    const self = this\n    const app = self.$f7\n    const router = self.$f7router\n    app.dialog.alert(`You should be recieving an email or text soon.`, () => {\n      router.back()\n    })\n  }\n}\n","import React, { useState, getGlobal } from 'reactn'\nimport {\n  Page,\n  List,\n  LoginScreenTitle,\n  ListInput,\n  Row,\n  Col,\n  Navbar,\n  Link,\n  Block,\n  BlockTitle,\n  Segmented,\n  Button,\n  ListButton,\n  BlockFooter,\n  ListItem,\n} from 'framework7-react'\n\nimport EmailOrPhoneInput from '../components/EmailOrPhoneInput'\n\ninterface PasswordResetProps {}\ninterface PasswordResetState {}\n\n// TODO: Password reset token must be valid.\nexport default class PasswordResetPage extends React.Component<\n  PasswordResetProps,\n  PasswordResetState\n> {\n  state: PasswordResetState = {}\n\n  render() {\n    return (\n      <Page className=\"PasswordResetPage\" noToolbar noSwipeback loginScreen>\n        <Navbar title=\"Password Reset\" backLink=\"Back\"></Navbar>\n        <List form>\n          <Block>Enter a new password.</Block>\n          {/* TODO: Allow reveal of passwords */}\n          <ListInput type=\"password\" placeholder=\"Password\" />\n          <ListInput type=\"password\" placeholder=\"Password confirmation\" />\n          <Block>\n            <Button outline fill>\n              Request Reset\n            </Button>\n          </Block>\n        </List>\n      </Page>\n    )\n  }\n  signIn() {\n    const self = this\n    const app = self.$f7\n    const router = self.$f7router\n    app.dialog.alert(`You should be recieving an email or text soon.`, () => {\n      router.back()\n    })\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React, { useGlobal, useState } from \"reactn\";\n\nimport {\n  Page,\n  Navbar,\n  Block,\n  BlockTitle,\n  Button,\n  List,\n  ListInput,\n  ListItem,\n  AccordionContent,\n  Toolbar,\n  Link,\n  Row,\n  Col,\n  Icon,\n  Sheet,\n  PageContent\n} from \"framework7-react\";\n\nimport { Case, When } from \"../components/Case\"\n\nimport pluralize from \"pluralize\"\nimport { timeOfDay } from \"../util\";\nimport { User } from '../common/models/user'\n\n\ninterface Props {}\n\n\n\ninterface State {\n  termsOpened: boolean\n}\n\nexport default class WelcomeParentPage extends React.Component<Props, State> {\n  state: State = {\n    termsOpened: false\n  }\n\n  totalLocations() {\n    const user: User = this.global.currentUser\n    return user.locations.length + user.children.map(x => x.locations.length).reduce((x, y) => x + y, 0)\n  }\n\n  whoDoYouFillSurveysFor() {\n    const user = this.global.currentUser\n    const fillForSelf = user.locations.length > 0\n    const fillForChildren = user.children.length > 0\n    if (fillForSelf && fillForChildren) {\n      return `Every day you'll need to fill out symptom surveys for\n      you and your ${pluralize('child', user.children.length)}.`\n    } else if (fillForSelf) {\n      return `Every day you'll need to fill out symptom surveys for yourself.`\n    } else if (fillForChildren) {\n      return `Every day you'll need to fill out symptom surveys for\n      your ${pluralize('child', user.children.length)}.`\n    } else {\n      // TODO: What if they have no locations or children?\n      return `This may have been due to an error. Please contact greenlight at help@greenlighted.org`\n    }\n  }\n\n  render() {\n    return <Page>\n      <Block>\n        <h1>\n          <Case test={timeOfDay()}>\n            <When value=\"morning\">Good Morning!</When>\n            <When value=\"afternoon\">Good Afternoon!</When>\n            <When value=\"evening\">Good Evening!</When>\n          </Case>\n        </h1>\n        <p>\n          You've been added by{' '}\n          {pluralize('locations', this.totalLocations(), true)} to Greenlight's\n          secure HIPAA and FERPA compliant COVID-19 monitoring platform.\n        </p>\n        <p>\n          {this.whoDoYouFillSurveysFor()} We will not share any data without your\n          permission.\n        </p>\n        <img alt=\"Welcome to Greenlight!\" src=\"/images/welcome-doctor.svg\" />\n        <p>\n          By continuing, you accept Greenlight's{' '}\n          <Link\n            onClick={() => {\n              this.setState({ termsOpened: true })\n            }}\n          >\n            Terms and Conditions\n          </Link>\n          .\n        </p>\n      </Block>\n      <Block>\n        <Row tag=\"p\">\n          <Col tag=\"span\">\n            <Button large href=\"/\">Sign Out</Button>\n          </Col>\n          <Col tag=\"span\">\n            <Button\n              large\n              fill\n              href=\"/welcome-parent/review\"\n            >\n              Continue\n            </Button>\n          </Col>\n        </Row>\n      </Block>\n      <Sheet\n        opened={this.state.termsOpened}\n        onSheetClosed={() => {\n          this.setState({ termsOpened: false })\n        }}\n      >\n        <Toolbar>\n          <div className=\"left\"></div>\n          <div className=\"right\">\n            <Link sheetClose>Close</Link>\n          </div>\n        </Toolbar>\n        {/*  Scrollable sheet content */}\n        <PageContent>\n          <Block>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quae\n              ducimus dolorum ipsa aliquid accusamus perferendis laboriosam...\n            </p>\n          </Block>\n        </PageContent>\n      </Sheet>\n    </Page>\n  }\n}\n\n","import { Case, When } from '../../components/Case'\nimport React from 'reactn'\nimport { Page, Navbar, Block, Link, List, ListItem, ListInput, Row, Col, Button } from 'framework7-react'\n\nimport { User } from '../../common/models/user'\nimport pluralize from 'pluralize'\n\ninterface Props {}\ninterface State {}\n\nexport default class extends React.Component<Props, State> {\n\n  childId() {\n    const rawId = this.$f7route.params['id']\n    if (!rawId) throw new Error(\"Child id missing\");\n    return parseInt(rawId)\n  }\n\n  child(): User {\n    return this.global.currentUser.children[this.childId() - 1]\n  }\n\n  hasNextChild() {\n    return this.childId() < this.global.currentUser.children.length\n  }\n\n  nextChild() {\n    if (!this.hasNextChild()) {\n      return null\n    }\n    return this.global.currentUser.children[this.childId()]\n  }\n\n  childCount() {\n    return this.global.currentUser.children.length\n  }\n\n  childrenNames() {\n    const children = this.global.currentUser.children\n    let names = ''\n    for (let i = 0; i < children.length; i++) {\n      names += children[i].firstName\n      if (i === (children.length - 2)) {\n        names += ', and '\n      }\n      if (i < children.length - 2)  {\n        names += ', '\n      }\n    }\n    return names\n  }\n\n  render() {\n    const user = this.global.currentUser\n    const child = this.child()\n\n    return (\n      <Page>\n        <Navbar title={`Review ${child.firstName}'s Info`} backLink></Navbar>\n\n        <Case test={true}>\n          {/* First Child */}\n          <When value={user.children[0] === child}>\n            <Block>\n              We've found {pluralize('child', this.childCount(), true)}{' '}\n              associated with you: {this.childrenNames()}. Let's take a moment\n              to review their information starting with {child.firstName}.\n              <br />\n              {/* TODO: Link to a page where users can remove students. */}\n              <Link>Is something wrong?</Link>\n            </Block>\n          </When>\n          {/* Last Child */}\n          <When value={user.children[user.children.length - 1] === child}>\n            <Block>\n              Take a moment to review {child.firstName}'s information.\n            </Block>\n          </When>\n          <When value={true}>\n            <Block>\n              Finally, take a moment to review {child.firstName}'s information.\n            </Block>\n          </When>\n        </Case>\n\n        <List noHairlines>\n          <ListItem footer=\"Update the schools Lisa will be attending.\">\n            <div slot=\"title\">\n              <b>{child.firstName}'s Schools and Places</b>\n            </div>\n          </ListItem>\n          {child.locations.map((location) => (\n            <ListItem\n              title={location.name}\n              smartSelect\n              smartSelectParams={{ openIn: 'sheet' }}\n            >\n              <select name=\"mac-windows\" defaultValue=\"attending\">\n                <option value=\"in-person\">In Person</option>\n                <option value=\"virtual\">Virtual</option>\n                <option value=\"mixed\">Mixed</option>\n                <option value=\"not-attending\">Not Attending</option>\n              </select>\n            </ListItem>\n          ))}\n        </List>\n        <List noHairlines>\n          <ListItem footer=\"Who is Lisa's primary care doctor?\">\n            <div slot=\"title\">\n              <b>{child.firstName}'s Primary Care (Optional)</b>\n            </div>\n          </ListItem>\n          <ListItem\n            checkbox\n            header=\"Don't have a primary care doctor?\"\n            title=\"Get help finding one\"\n            name=\"demo-checkbox\"\n          />\n          <ListInput\n            label=\"Primary Care Doctor\"\n            placeholder={`${child.firstName}'s doctor's name`}\n            type=\"text\"\n          />\n          <ListInput\n            label=\"Primary Care Doctor Phone\"\n            placeholder={`${child.firstName}'s doctor's phone`}\n            type=\"tel\"\n          />\n        </List>\n        <Block>\n          <Case test={this.hasNextChild()}>\n            <When value={true}>\n              <Button\n                href={`/welcome-parent/children/${this.childId() + 1}`}\n                fill\n              >\n                Continue to {this.nextChild()?.firstName}\n              </Button>\n            </When>\n            <When value={false}>\n              <Button fill href={`/welcome-parent/surveys/children/1`}>\n                Continue\n              </Button>\n            </When>\n          </Case>\n        </Block>\n      </Page>\n    )\n  }\n}\n","\nimport HomePage from './pages/HomePage'\nimport NotFoundPage from './pages/NotFoundPage'\nimport DashboardPage from './pages/DashboardPage'\nimport SymptomSurveyPage from './pages/SymptomSurveyPage'\nimport ThankYouPage from './pages/SymptomSurveyCompletePage'\nimport SignInPage from './pages/SignInPage'\nimport MagicSignInPage from './pages/MagicSignInPage'\nimport SplashPage from './pages/SplashPage'\nimport RegistrationPage from './pages/RegistrationPage'\nimport ForgotPasswordPage from './pages/ForgotPasswordPage'\nimport PasswordResetPage from './pages/PasswordResetPage'\n\nimport WelcomeParentPage from './pages/WelcomeParentPage'\nimport WelcomeParentReviewChildPage from './pages/WelcomeParent/ReviewChildPage'\nimport WelcomeParentReviewUserPage from './pages/WelcomeParent/ReviewUserPage'\nimport WelcomeParentPasswordPage from './pages/WelcomeParent/PasswordPage'\n\nexport default [\n  {\n    path: '/',\n    component: SplashPage,\n  },\n  {\n    path: '/sign-in',\n    component: SignInPage,\n  },\n  {\n    path: '/magic-sign-in',\n    component: MagicSignInPage,\n  },\n  {\n    path: '/join',\n    component: RegistrationPage,\n  },\n  {\n    path: '/dashboard',\n    component: DashboardPage,\n  },\n  {\n    path: '/password-resets/:token',\n    component: PasswordResetPage,\n  },\n  {\n    path: '/forgot-password',\n    component: ForgotPasswordPage,\n  },\n  {\n    path: '/welcome-parent',\n    component: WelcomeParentPage,\n  },\n  {\n    path: '/welcome-parent/review',\n    component: WelcomeParentReviewUserPage,\n  },\n  {\n    path: '/welcome-parent/password',\n    component: WelcomeParentPasswordPage,\n  },\n  {\n    path: '/welcome-parent/children/:id',\n    component: WelcomeParentReviewChildPage,\n  },\n  {\n    path: '/welcome-parent/surveys/children/:id',\n    component: SymptomSurveyPage,\n  },\n  {\n    path: '/welcome/users/:id/surveys/new',\n    component: SymptomSurveyPage,\n  },\n  {\n    path: '/welcome-parent/thank-you',\n    component: ThankYouPage,\n  },\n  {\n    path: '(.*)',\n    component: NotFoundPage,\n  },\n]\n","import React from 'react'\nimport { Page, Navbar, Link, Block, BlockTitle } from 'framework7-react'\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Join Greenlight\" backLink=\"Back\"></Navbar>\n    <Block strong noHairlines>\n      <p>\n        Greenlight is currently invitation only. Please contact your school to\n        find out when your account will be opened.\n      </p>\n    </Block>\n  </Page>\n)\n","import React, { useGlobal } from 'reactn'\nimport { AccordionContent, Card, CardHeader, CardContent, Page, List, ListItem, Navbar, Link, Block, BlockTitle, NavLeft, NavTitle, NavRight, Icon } from \"framework7-react\";\nimport JDenticon from '../components/JDenticon'\nimport { User } from '../common/models/user'\n\nexport default () => {\n  const currentUser: User = useGlobal('currentUser')[0]\n\n  return (\n    <Page>\n      <Navbar>\n        <NavTitle>Greenlight</NavTitle>\n        <NavRight>\n          <Link>\n            <Icon f7=\"person_circle\" />\n          </Link>\n        </NavRight>\n      </Navbar>\n      <BlockTitle>\n        <b>Good Morning, {currentUser.firstName}!</b>\n      </BlockTitle>\n      <div className=\"GLCard\">\n        <div className=\"GLCard-title\">Submit Daily Check-In</div>\n        <div className=\"GLCard-body\">\n          How are your children feeling today? Tell us so they can get the\n          Greenlight.\n        </div>\n        <div className=\"GLCard-action\">\n          <div style={{ width: '50%', display: 'inline-block' }}>\n            Go to Check-In\n          </div>\n          <div\n            style={{\n              width: '50%',\n              display: 'inline-block',\n              textAlign: 'right',\n            }}\n          >\n            <Icon f7=\"arrow_right\" />\n          </div>\n        </div>\n      </div>\n\n      <BlockTitle>Your Children</BlockTitle>\n      <List>\n        {currentUser.children.map((child) => (\n          <ListItem\n            accordionItem\n            link=\"#\"\n            title={child.firstName}\n            after=\"Not Submitted\"\n          >\n            <div slot=\"media\">\n              <JDenticon user={child} size={29} />\n            </div>\n            <AccordionContent>\n              <List>\n                <ListItem\n                  link={`/users/${child.id}/covid-test`}\n                  title=\"Submit COVID Test\"\n                ></ListItem>\n                <ListItem\n                  link={`/users/${child.id}/pass`}\n                  title=\"Greenlight Pass\"\n                ></ListItem>\n                <ListItem\n                  link={`/users/${child.id}/absence`}\n                  title=\"Schedule Absence\"\n                ></ListItem>\n                <ListItem\n                  link={`/users/${child.id}/locations`}\n                  title=\"Locations\"\n                ></ListItem>\n              </List>\n            </AccordionContent>\n          </ListItem>\n        ))}\n      </List>\n      <BlockTitle>Resources For You</BlockTitle>\n      <List>\n        {/* https://www.communitycarenc.org/what-we-do/supporting-primary-care */}\n        <ListItem\n          link=\"#\"\n          title=\"Get Connected\"\n          footer=\"Contact a Health Careworker\"\n        ></ListItem>\n        <ListItem\n          link=\"#\"\n          title=\"Find Testing\"\n          footer=\"Testing Sites Near You\"\n        ></ListItem>\n        {/* https://ncchildcare.ncdhhs.gov/Portals/0/documents/pdf/P/Parent_and_Families_School_Age_Child_Care.pdf?ver=2020-08-26-122445-963 */}\n        <ListItem\n          link=\"#\"\n          title=\"Child Care Services\"\n          footer=\"Additional Services to Help\"\n        ></ListItem>\n        <ListItem\n          link=\"#\"\n          title=\"More Resources\"\n          footer=\"Additional Services to Help\"\n        ></ListItem>\n      </List>\n    </Page>\n  )\n}\n","import React from 'reactn'\n\nimport { clone } from 'lodash'\nimport { Page, Navbar, Block, Button, List, ListInput } from 'framework7-react'\n\nimport { User } from '../../common/models/user'\n\ninterface Props {}\n\ninterface State {\n  updatedUser: User\n}\n\nexport default class ReviewUserPage extends React.Component<Props, State> {\n  state: State = {\n    updatedUser: clone(this.global.currentUser)\n  }\n\n  render() {\n    const updatedUser = this.state.updatedUser\n    const isDifferentEmail = updatedUser.email !== this.global.currentUser.email\n    const isDifferentMobileNumber =\n      updatedUser.mobileNumber !== this.global.currentUser.mobileNumber\n    return (\n      <Page>\n        <Navbar backLink={true} title=\"Review Your Info\" />\n        <Block>\n          <p>\n            Here is the information we have on file for you. Feel free to make\n            any changes.\n          </p>\n        </Block>\n\n        <List noHairlinesMd>\n          <ListInput\n            label=\"First Name\"\n            type=\"text\"\n            placeholder=\"Your first name\"\n            value={updatedUser.firstName}\n            onChange={(e) => {\n              updatedUser.firstName = (e.target.value as string) || ''\n              this.setState({ updatedUser })\n            }}\n            required\n          />\n          <ListInput\n            label=\"Last Name\"\n            type=\"text\"\n            placeholder=\"Your last name\"\n            value={updatedUser.lastName}\n            onChange={(e) => {\n              updatedUser.lastName = (e.target.value as string) || ''\n              this.setState({ updatedUser })\n            }}\n            required\n          />\n          <ListInput\n            label=\"Email\"\n            type=\"email\"\n            placeholder=\"Your email\"\n            value={updatedUser.email || ''}\n            info={\n              isDifferentEmail\n                ? \"We'll need to verify this new email.\"\n                : undefined\n            }\n            onChange={(e) => {\n              updatedUser.email = (e.target.value as string) || ''\n              this.setState({ updatedUser })\n            }}\n            required\n            validate\n          />\n          <ListInput\n            label=\"Mobile number\"\n            type=\"tel\"\n            placeholder=\"Your mobile number\"\n            value={updatedUser.mobileNumber || ''}\n            info={\n              isDifferentMobileNumber\n                ? \"We'll need to verify this new phone number.\"\n                : undefined\n            }\n            onChange={(e) => {\n              updatedUser.mobileNumber = (e.target.value as string) || ''\n              this.setState({ updatedUser })\n            }}\n            required\n            validate\n          />\n          {/* TODO: Ask user if they'd prefer email or text message alerts */}\n          <Block>\n            <p>Next you'll set your password.</p>\n            <Button href=\"/welcome-parent/password\" fill>\n              Continue\n            </Button>\n          </Block>\n        </List>\n      </Page>\n    )\n  }\n}\n","import React from 'reactn'\nimport { Page, Navbar, Block, List, ListInput, Button } from 'framework7-react'\nimport { When, Case } from '../../components/Case'\n\n\n\ninterface Props {}\ninterface State {}\n\nexport default class extends React.Component<Props, State> {\n  render() {\n    return (\n      <Page>\n        <Navbar title=\"Set Your Password\"></Navbar>\n        <Block>\n          <p>\n            You'll sign in with your email address or mobile number and this\n            password.\n          </p>\n        </Block>\n        <Block>\n          <List noHairlines>\n            <ListInput\n              label=\"Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n              validate\n            />\n            <ListInput\n              label=\"Confirm Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n              validate\n            />\n          </List>\n          <img\n            alt=\"Greenlight gives security highest importance.\"\n            src=\"/images/welcome-secure.svg\"\n          />\n\n          <Case test={this.global.currentUser.children.length > 0}>\n            <When value={true}>\n              <p>Next you'll review your children.</p>\n              <Button large fill href=\"/welcome-parent/children/1\">\n                Continue\n              </Button>\n            </When>\n            <When value={false}>\n              <p>Next you'll fill out your first survey!</p>\n\n              <Button large fill href=\"/welcome/users/me/surveys/new\">\n                Continue\n              </Button>\n            </When>\n          </Case>\n        </Block>\n      </Page>\n    )\n  }\n}\n","import React from 'react';\nimport { Page, Navbar, Block, BlockTitle, Button } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"All Clear!\" backLink=\"Back\"></Navbar>\n\n    <Block>\n      <p style={{fontWeight: \"bold\"}}>You are cleared!</p>\n      <p>Enjoy your day! Here's something we hope will make you smile. 😃</p>\n      <div dangerouslySetInnerHTML={{__html: '<div style=\"width:100%;height:0;padding-bottom:100%;position:relative;\"><iframe src=\"https://giphy.com/embed/22YOkQog92fpS\" width=\"100%\" height=\"100%\" style=\"position:absolute\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe></div><p><a href=\"https://giphy.com/gifs/cheezburger-funny-fail-22YOkQog92fpS\">via GIPHY</a></p>' }}>\n      </div>\n      <Button large fill href=\"/dashboard\">\n        Back Home\n      </Button>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Not found\" backLink=\"Back\" />\n    <Block strong>\n      <p>Sorry</p>\n      <p>Requested content not found.</p>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport 'typeface-poppins'\nimport 'typeface-open-sans'\n\nimport './App.css';\n\nimport {\n  App,\n  Panel,\n  View,\n  Popup,\n  Page,\n  Navbar,\n  NavRight,\n  Link,\n  Block,\n  LoginScreen,\n  LoginScreenTitle,\n  List,\n  ListInput,\n  ListButton,\n  BlockFooter,\n  Toolbar\n} from 'framework7-react';\n\nimport routes from './routes';\n\nexport default function () {\n\n  // Framework7 parameters here\n  const f7params = {\n    id: 'com.greenlightready.mobile', // App bundle ID\n    name: 'Greenlight', // App name\n    theme: 'auto', // Automatic theme detection\n    // App routes\n    routes,\n    view: {\n      pushState: true,\n      history: true\n    },\n  }\n\n  return (\n    <App params={f7params} className=\"App\">\n      {/* Statusbar */}\n      {/* <Statusbar /> */}\n\n\n      {/* Main View */}\n      <View id=\"main-view\" url=\"/\" main className=\"safe-areas\" />\n    </App>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './common/models'\n\nimport React, { setGlobal } from 'reactn'\n\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle'\n\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react'\n\n// Framework7 styles\nimport 'framework7/css/framework7.bundle.css'\nimport 'framework7-icons'\n\nimport './index.css'\n\n\nimport addReactNDevTools from 'reactn-devtools';\nimport fixtures from './fixtures'\naddReactNDevTools();\n\n\nsetGlobal({\n  currentUser: fixtures.users.beyu\n})\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React)\n\n// addCallback((global) => {\n//   window.localStorage.setItem('globalState', JSON.stringify(global));\n// })\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}